{"version":3,"file":"vplidecodefile.min.js","sources":["../src/vplidecodefile.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Code files extension method using ACE editorfiles. Add to VPLFile object.\n *\n * @copyright 2013 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals ace */\n\nimport $ from 'jquery';\nimport {VPLUtil} from 'mod_vpl/vplutil';\nimport {VPLUI} from 'mod_vpl/vplui';\n\nexport const codeExtension = function() {\n    var self = this;\n    var editor = null;\n    var session = null;\n    var readOnly = self.getFileManager().readOnly;\n    var getOldContent = this.getContent;\n    this.getContent = function() {\n        if (!this.isOpen()) {\n            return getOldContent.call(this);\n        }\n        return editor.getValue();\n    };\n    var setOldContent = this.setContent;\n    this.setContent = function(c) {\n        setOldContent.call(this, c);\n        if (this.isOpen()) {\n            editor.setValue(c);\n        }\n    };\n    var oldDestroy = this.destroy;\n    this.destroy = function() {\n        if (this.isOpen()) {\n            editor.destroy();\n        }\n        oldDestroy.call(this);\n    };\n    this.setFontSize = function(size) {\n        if (this.isOpen()) {\n            editor.setFontSize(size);\n        }\n    };\n    var oldAdjustSize = this.adjustSize;\n    this.adjustSize = function() {\n        if (oldAdjustSize.call(this)) {\n            editor.resize(true);\n            return true;\n        }\n        return false;\n    };\n    this.gotoLine = function(line) {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.gotoLine(line, 0);\n        editor.scrollToLine(line, true);\n        editor.focus();\n        this.updateStatus();\n    };\n    this.setReadOnly = function(s) {\n        readOnly = s;\n        if (this.isOpen()) {\n            editor.setReadOnly(s);\n        }\n    };\n    this.isReadOnly = function() {\n        return readOnly;\n    };\n    this.focus = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        var tid = this.getTId();\n        // Workaround to remove JQwery-UI background color.\n        $(tid).removeClass('ui-widget-content ui-tabs-panel');\n        editor.focus();\n        this.updateStatus();\n    };\n    this.blur = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.blur();\n    };\n    this.undo = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.undo();\n        editor.focus();\n    };\n    this.redo = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.redo();\n        editor.focus();\n    };\n    this.selectAll = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.selectAll();\n        editor.focus();\n    };\n    this.hasUndo = function() {\n        if (!this.isOpen()) {\n            return false;\n        }\n        return session.getUndoManager().hasUndo();\n    };\n    this.hasRedo = function() {\n        if (!this.isOpen()) {\n            return false;\n        }\n        return session.getUndoManager().hasRedo();\n    };\n    this.hasSelectAll = VPLUtil.returnTrue;\n    this.hasFind = VPLUtil.returnTrue;\n    this.hasFindReplace = VPLUtil.returnTrue;\n    this.hasNext = VPLUtil.returnTrue;\n    this.find = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.execCommand('find');\n    };\n    this.replace = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.execCommand('replace');\n    };\n    this.next = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.execCommand('findnext');\n    };\n    this.getAnnotations = function() {\n        if (!this.isOpen()) {\n            return [];\n        }\n        return session.getAnnotations();\n    };\n    this.setAnnotations = function(a) {\n        if (!this.isOpen()) {\n            return false;\n        }\n        return session.setAnnotations(a);\n    };\n    this.clearAnnotations = function() {\n        if (!this.isOpen()) {\n            return false;\n        }\n        return session.clearAnnotations();\n    };\n    this.langSelection = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        var filenamepath = this.getFileName();\n        var lang = VPLUtil.langType(filenamepath);\n        session.setMode(\"ace/mode/\" + lang);\n        session.setTabSize(4);\n        session.setUseSoftTabs(!VPLUtil.useHardTabs(filenamepath));\n        this.setLang(lang);\n    };\n    this.getEditor = function() {\n        if (!this.isOpen()) {\n            return false;\n        }\n        return editor;\n    };\n    this.setTheme = function(theme) {\n        if (!this.isOpen()) {\n            return;\n        }\n        editor.setTheme(\"ace/theme/\" + theme);\n    };\n    this.updateStatus = function() {\n        if (!this.isOpen()) {\n            return;\n        }\n        var text = '';\n        var pos = editor.getCursorPosition();\n        var fullname = this.getFileName();\n        var name = VPLUtil.getFileName(fullname);\n        if (fullname.length > 20 || name != fullname) {\n            text = fullname + ' ';\n        }\n        text += \"Ln \" + (pos.row + 1) + ', Col ' + (pos.column + 1);\n        text += \" \" + VPLUtil.langName(name);\n        VPLUI.showIDEStatus(text);\n    };\n\n    this.open = function() {\n        this.showFileName();\n        if (typeof ace === 'undefined') {\n            VPLUtil.loadScript(['/ace9/ace.js',\n                '/ace9/ext-language_tools.js'],\n                function() {\n                    self.open();\n                });\n            return false;\n        }\n        if (this.isOpen()) {\n            return editor;\n        }\n        var fileManager = this.getFileManager();\n        var tid = this.getTId();\n        // Workaround to remove jquery-ui theme background color.\n        $(tid).removeClass('ui-widget-content ui-tabs-panel');\n        ace.require(\"ext/language_tools\");\n        editor = ace.edit(\"vpl_file\" + this.getId());\n        session = editor.getSession();\n        editor.setOptions({\n            enableBasicAutocompletion: true,\n            enableSnippets: true,\n        });\n        editor.setValue(this.getContent());\n        editor.setFontSize(fileManager.getFontSize());\n        editor.setTheme(\"ace/theme/\" + fileManager.getTheme());\n        editor.$blockScrolling = Infinity;\n        editor.gotoLine(1, 0);\n        editor.setReadOnly(readOnly);\n        // Avoid undo of editor initial content.\n        session.setUndoManager(new ace.UndoManager());\n        this.setOpen(true);\n        this.langSelection();\n        // Code to control Paste and drop under restricted editing.\n        editor.execCommand('replace');\n        var addEventDrop = function() {\n            var tag = $(tid + ' div.ace_search');\n            if (tag.length) {\n                tag.on('drop', fileManager.dropHandler);\n                var button = $('.ace_searchbtn_close');\n                button.trigger('click');\n            } else {\n                setTimeout(addEventDrop, 50);\n            }\n        };\n        editor.on('change', function() {\n            self.change();\n        });\n        session.selection.on('changeCursor', function() {\n            self.updateStatus();\n        });\n        // Try to grant dropHandler installation.\n        setTimeout(addEventDrop, 5);\n        // Save previous onPaste and change for a new one.\n        var prevOnPaste = editor.onPaste;\n        editor.onPaste = function(s) {\n            if (fileManager.restrictedEdit) {\n                editor.insert(fileManager.getClipboard());\n            } else {\n                prevOnPaste.call(editor, s);\n            }\n        };\n        // Control copy and cut (yes cut also use this) for localClipboard.\n        editor.on('copy', function(t) {\n            fileManager.setClipboard(t.text);\n        });\n        $(tid).on('paste', '*', fileManager.restrictedPaste);\n        $(tid + ' div.ace_content').on('drop', fileManager.dropHandler);\n        $(tid + ' div.ace_content').on('dragover', fileManager.dragoverHandler);\n        // Workaround to avoid hidden first line in editor.\n        $(tid).find('div.ace_scroller').css('position', 'static');\n        this.adjustSize();\n        $(tid).find('div.ace_scroller').css('position', 'absolute');\n        this.updateStatus();\n        return editor;\n    };\n    this.close = function() {\n        this.setOpen(false);\n        if (editor === null) {\n            return;\n        }\n        this.setContent(editor.getValue());\n        editor.destroy();\n        editor = null;\n        session = null;\n    };\n};\n"],"names":["self","this","editor","session","readOnly","getFileManager","getOldContent","getContent","isOpen","getValue","call","setOldContent","setContent","c","setValue","oldDestroy","destroy","setFontSize","size","oldAdjustSize","adjustSize","resize","gotoLine","line","scrollToLine","focus","updateStatus","setReadOnly","s","isReadOnly","tid","getTId","removeClass","blur","undo","redo","selectAll","hasUndo","getUndoManager","hasRedo","hasSelectAll","VPLUtil","returnTrue","hasFind","hasFindReplace","hasNext","find","execCommand","replace","next","getAnnotations","setAnnotations","a","clearAnnotations","langSelection","filenamepath","getFileName","lang","langType","setMode","setTabSize","setUseSoftTabs","useHardTabs","setLang","getEditor","setTheme","theme","text","pos","getCursorPosition","fullname","name","length","row","column","langName","showIDEStatus","open","showFileName","ace","loadScript","fileManager","require","edit","getId","getSession","setOptions","enableBasicAutocompletion","enableSnippets","getFontSize","getTheme","$blockScrolling","Infinity","setUndoManager","UndoManager","setOpen","addEventDrop","tag","on","dropHandler","trigger","setTimeout","change","selection","prevOnPaste","onPaste","restrictedEdit","insert","getClipboard","t","setClipboard","restrictedPaste","dragoverHandler","css","close"],"mappings":";;;;;;;0KA6B6B,eACrBA,KAAOC,KACPC,OAAS,KACTC,QAAU,KACVC,SAAWJ,KAAKK,iBAAiBD,SACjCE,cAAgBL,KAAKM,gBACpBA,WAAa,kBACTN,KAAKO,SAGHN,OAAOO,WAFHH,cAAcI,KAAKT,WAI9BU,cAAgBV,KAAKW,gBACpBA,WAAa,SAASC,GACvBF,cAAcD,KAAKT,KAAMY,GACrBZ,KAAKO,UACLN,OAAOY,SAASD,QAGpBE,WAAad,KAAKe,aACjBA,QAAU,WACPf,KAAKO,UACLN,OAAOc,UAEXD,WAAWL,KAAKT,YAEfgB,YAAc,SAASC,MACpBjB,KAAKO,UACLN,OAAOe,YAAYC,WAGvBC,cAAgBlB,KAAKmB,gBACpBA,WAAa,mBACVD,cAAcT,KAAKT,QACnBC,OAAOmB,QAAO,IACP,SAIVC,SAAW,SAASC,MAChBtB,KAAKO,WAGVN,OAAOoB,SAASC,KAAM,GACtBrB,OAAOsB,aAAaD,MAAM,GAC1BrB,OAAOuB,aACFC,sBAEJC,YAAc,SAASC,GACxBxB,SAAWwB,EACP3B,KAAKO,UACLN,OAAOyB,YAAYC,SAGtBC,WAAa,kBACPzB,eAENqB,MAAQ,cACJxB,KAAKO,cAGNsB,IAAM7B,KAAK8B,6BAEbD,KAAKE,YAAY,mCACnB9B,OAAOuB,aACFC,sBAEJO,KAAO,WACHhC,KAAKO,UAGVN,OAAO+B,aAENC,KAAO,WACHjC,KAAKO,WAGVN,OAAOgC,OACPhC,OAAOuB,eAENU,KAAO,WACHlC,KAAKO,WAGVN,OAAOiC,OACPjC,OAAOuB,eAENW,UAAY,WACRnC,KAAKO,WAGVN,OAAOkC,YACPlC,OAAOuB,eAENY,QAAU,mBACNpC,KAAKO,UAGHL,QAAQmC,iBAAiBD,gBAE/BE,QAAU,mBACNtC,KAAKO,UAGHL,QAAQmC,iBAAiBC,gBAE/BC,aAAeC,iBAAQC,gBACvBC,QAAUF,iBAAQC,gBAClBE,eAAiBH,iBAAQC,gBACzBG,QAAUJ,iBAAQC,gBAClBI,KAAO,WACH7C,KAAKO,UAGVN,OAAO6C,YAAY,cAElBC,QAAU,WACN/C,KAAKO,UAGVN,OAAO6C,YAAY,iBAElBE,KAAO,WACHhD,KAAKO,UAGVN,OAAO6C,YAAY,kBAElBG,eAAiB,kBACbjD,KAAKO,SAGHL,QAAQ+C,iBAFJ,SAIVC,eAAiB,SAASC,WACtBnD,KAAKO,UAGHL,QAAQgD,eAAeC,SAE7BC,iBAAmB,mBACfpD,KAAKO,UAGHL,QAAQkD,yBAEdC,cAAgB,cACZrD,KAAKO,cAGN+C,aAAetD,KAAKuD,cACpBC,KAAOhB,iBAAQiB,SAASH,cAC5BpD,QAAQwD,QAAQ,YAAcF,MAC9BtD,QAAQyD,WAAW,GACnBzD,QAAQ0D,gBAAgBpB,iBAAQqB,YAAYP,oBACvCQ,QAAQN,aAEZO,UAAY,mBACR/D,KAAKO,UAGHN,aAEN+D,SAAW,SAASC,OAChBjE,KAAKO,UAGVN,OAAO+D,SAAS,aAAeC,aAE9BxC,aAAe,cACXzB,KAAKO,cAGN2D,KAAO,GACPC,IAAMlE,OAAOmE,oBACbC,SAAWrE,KAAKuD,cAChBe,KAAO9B,iBAAQe,YAAYc,WAC3BA,SAASE,OAAS,IAAMD,MAAQD,YAChCH,KAAOG,SAAW,KAEtBH,MAAQ,OAASC,IAAIK,IAAM,GAAK,UAAYL,IAAIM,OAAS,GACzDP,MAAQ,IAAM1B,iBAAQkC,SAASJ,mBACzBK,cAAcT,aAGnBU,KAAO,mBACHC,eACc,oBAARC,4BACCC,WAAW,CAAC,eAChB,gCACA,WACIhF,KAAK6E,WAEN,KAEP5E,KAAKO,gBACEN,WAEP+E,YAAchF,KAAKI,iBACnByB,IAAM7B,KAAK8B,6BAEbD,KAAKE,YAAY,mCACnB+C,IAAIG,QAAQ,sBACZhF,OAAS6E,IAAII,KAAK,WAAalF,KAAKmF,SACpCjF,QAAUD,OAAOmF,aACjBnF,OAAOoF,WAAW,CACdC,2BAA2B,EAC3BC,gBAAgB,IAEpBtF,OAAOY,SAASb,KAAKM,cACrBL,OAAOe,YAAYgE,YAAYQ,eAC/BvF,OAAO+D,SAAS,aAAegB,YAAYS,YAC3CxF,OAAOyF,gBAAkBC,EAAAA,EACzB1F,OAAOoB,SAAS,EAAG,GACnBpB,OAAOyB,YAAYvB,UAEnBD,QAAQ0F,eAAe,IAAId,IAAIe,kBAC1BC,SAAQ,QACRzC,gBAELpD,OAAO6C,YAAY,eACfiD,aAAe,eACXC,KAAM,mBAAEnE,IAAM,mBACdmE,IAAIzB,QACJyB,IAAIC,GAAG,OAAQjB,YAAYkB,cACd,mBAAE,wBACRC,QAAQ,UAEfC,WAAWL,aAAc,KAGjC9F,OAAOgG,GAAG,UAAU,WAChBlG,KAAKsG,YAETnG,QAAQoG,UAAUL,GAAG,gBAAgB,WACjClG,KAAK0B,kBAGT2E,WAAWL,aAAc,OAErBQ,YAActG,OAAOuG,eACzBvG,OAAOuG,QAAU,SAAS7E,GAClBqD,YAAYyB,eACZxG,OAAOyG,OAAO1B,YAAY2B,gBAE1BJ,YAAY9F,KAAKR,OAAQ0B,IAIjC1B,OAAOgG,GAAG,QAAQ,SAASW,GACvB5B,YAAY6B,aAAaD,EAAE1C,6BAE7BrC,KAAKoE,GAAG,QAAS,IAAKjB,YAAY8B,qCAClCjF,IAAM,oBAAoBoE,GAAG,OAAQjB,YAAYkB,iCACjDrE,IAAM,oBAAoBoE,GAAG,WAAYjB,YAAY+B,qCAErDlF,KAAKgB,KAAK,oBAAoBmE,IAAI,WAAY,eAC3C7F,iCACHU,KAAKgB,KAAK,oBAAoBmE,IAAI,WAAY,iBAC3CvF,eACExB,aAENgH,MAAQ,gBACJnB,SAAQ,GACE,OAAX7F,cAGCU,WAAWV,OAAOO,YACvBP,OAAOc,UACPd,OAAS,KACTC,QAAU"}