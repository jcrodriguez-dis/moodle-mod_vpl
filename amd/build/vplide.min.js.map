{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals MathJax */\n/* globals Promise */\n/* globals openpopup */\n\ndefine(\n    [\n        'jquery',\n        'jqueryui',\n        'mod_vpl/vplutil',\n        'mod_vpl/vplui',\n        'mod_vpl/vplidefile',\n        'mod_vpl/vplidebutton',\n        'mod_vpl/vplterminal',\n        'mod_vpl/vplvnc',\n    ],\n    function($, jqui, VPLUtil, VPLUI, VPLFile, VPLIDEButtons, VPLTerminal, VPLVNCClient) {\n        if (typeof VPLIDE !== 'undefined') {\n            return VPLIDE;\n        }\n        var vplIdeInstance;\n        var VPLIDE = function(rootId, options) {\n            var self = this;\n            var fileManager;\n            var adjustTabsTitles;\n            var autoResizeTab;\n            var showErrorMessage;\n            var updateMenu;\n            var executionActions;\n            var minNumberOfFiles = options.minfiles || 0;\n            var maxNumberOfFiles = options.maxfiles || 0;\n            var restrictedEdit = options.restrictededitor || options.example;\n            var readOnly = options.example;\n            var readOnlyFiles = options.readOnlyFiles;\n            var isTeacher = options.isTeacher;\n            var fullScreen = false;\n            var scrollBarWidth = VPLUI.scrollBarWidth();\n            var str = VPLUtil.str;\n            var rootObj = $('#' + rootId);\n            $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                          .append('<meta name=\"viewport\" width=\"device-width\">')\n                          .append('<link rel=\"stylesheet\" href=\"../editor/VPLIDE.css\"/>');\n            if (typeof rootObj != 'object') {\n                throw new Error(\"VPL: constructor tag_id not found\");\n            }\n            var optionsToCheck = {\n                'new': true,\n                'rename': true,\n                'delete': true,\n                'save': true,\n                'run': true,\n                'edit': true,\n                'debug': true,\n                'evaluate': true,\n                'import': true,\n                'resetfiles': true,\n                'sort': true,\n                'multidelete': true,\n                'showparentfiles': true,\n                'acetheme': true,\n                'console': true,\n                'comments': true\n            };\n            if ((typeof options.loadajaxurl) == 'undefined') {\n                options.loadajaxurl = options.ajaxurl;\n            }\n            (function() {\n                var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n                options.new = activateModification;\n                options.rename = activateModification;\n                options.delete = activateModification;\n                options.comments = options.comments && !options.example;\n                options.acetheme = true;\n            })();\n            options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n            options.multidelete = options.sort;\n            options.import = !restrictedEdit;\n            var isOptionAllowed = function(op) {\n                if (!optionsToCheck[op]) {\n                    return true;\n                }\n                return options[op];\n            };\n            options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n            if ((typeof options.fontSize) == 'undefined') {\n                options.fontSize = 12;\n            }\n            options.fontSize = parseInt(options.fontSize);\n            /**\n             * Handler for dragover event.\n             * @param {object} e event.\n             */\n            function dragoverHandler(e) {\n                if (restrictedEdit) {\n                    e.originalEvent.dataTransfer.dropEffect = 'none';\n                } else {\n                    e.originalEvent.dataTransfer.dropEffect = 'copy';\n                }\n                e.preventDefault();\n            }\n            /**\n             * Handler for drop event.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function dropHandler(e) {\n                if (restrictedEdit) { // No drop allowed.\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                var droppedFiles = [];\n                // Function that lists all files and subfiles of given entry into droppedFiles.\n                var listDroppedFiles = function(entry, path=\"\") {\n                    return new Promise(function(resolve){\n                        if (entry.isFile) {\n                            // Current entry is a file : add it to the list.\n                            entry.file(function(file) {\n                                // Change its name s.t. it preserves directories structure.\n                                var fullName = path + file.name;\n                                Object.defineProperty(file, \"name\", {\n                                    get: function(){ return fullName; }\n                                });\n                                droppedFiles.push(file);\n                                resolve();\n                            });\n                        } else if (entry.isDirectory) {\n                            // Current entry is a directory : process its content.\n                            var dirReader = entry.createReader();\n                            dirReader.readEntries(function(entries) {\n                                var dirPromises = [];\n                                for (var i=0; i<entries.length; i++) {\n                                    dirPromises.push(listDroppedFiles(entries[i], path + entry.name + \"/\"));\n                                }\n                                Promise.all(dirPromises).then(resolve);\n                            });\n                        } else {\n                            // This is neither a directory nor a file : ignore it.\n                            resolve();\n                        }\n                    });\n                };\n                var dt = e.originalEvent.dataTransfer;\n\n                // List every element of the drop event.\n                var promises = [];\n                for (var i=0; i<dt.items.length; i++) {\n                    promises.push(listDroppedFiles(dt.items[i].webkitGetAsEntry()));\n                }\n\n                // Drop files.\n                if (dt.files.length > 0) {\n                    Promise.all(promises)\n                    .then(function(){\n                        VPLUI.readSelectedFiles(droppedFiles, function(file) {\n                            return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                        },\n                        function(){\n                            fileManager.fileListVisibleIfNeeded();\n                        });\n                        return;\n                    });\n                    e.stopImmediatePropagation();\n                    return false;\n                }\n                return false;\n            }\n            rootObj.on('drop', dropHandler);\n            rootObj.on('dragover', dragoverHandler);\n            /**\n             * Handler for paste limited by restrictedEdit var.\n             * @param {object} e event.\n             * @returns {boolean}\n             */\n            function restrictedPaste(e) {\n                if (restrictedEdit) {\n                    e.stopPropagation();\n                    return false;\n                }\n                return true;\n            }\n            // Init editor vars.\n            var menu = $('#vpl_menu');\n            var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n            var tr = $('#vpl_tr');\n            var fileListContainer = $('#vpl_filelist');\n            var fileList = $('#vpl_filelist_header');\n            var fileListContent = $('#vpl_filelist_content');\n            var tabsUl = $('#vpl_tabs_ul');\n            var tabs = $('#vpl_tabs');\n            var resultContainer = $('#vpl_results');\n            var result = $('#vpl_results_accordion');\n            var renameDiretoryAction = VPLUtil.doNothing;\n            fileListContainer.vplMinWidth = 80;\n            resultContainer.vplMinWidth = 100;\n            /**\n             * Avoids selecting grade.\n             * @param {object} event Unuse.\n             * @param {object} ui UI origen.\n             * @returns {boolean}\n             */\n            function avoidSelectGrade(event, ui) {\n                if (\"newHeader\" in ui) {\n                    if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Constructor of FileManager objects\n             */\n            function FileManager() {\n                var tabsUl = $('#vpl_tabs_ul');\n                $('#vpl_tabs').tabs();\n                var tabs = $('#vpl_tabs').tabs(\"widget\");\n                var files = [];\n                var openFiles = [];\n                var modified = true;\n                var self = this;\n                (function() {\n                    var version;\n                    self.setVersion = function(v) {\n                       version = v;\n                    };\n                    self.getVersion = function() {\n                       return version;\n                    };\n                })();\n                this.updateFileList = function() {\n                    self.generateFileList();\n                };\n                this.fileNameExists = function(name) {\n                    var checkName = name.toLowerCase();\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase() == checkName) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                /**\n                 * Checks if name is included in current files names\n                 * @param {string} name Name of file\n                 * @returns {boolean} if found or not found\n                 */\n                function fileNameIncluded(name) {\n                    var checkName = name.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        var nameMod = files[i].getFileName().toLowerCase() + '/';\n                        // Check for name as directory existent.\n                        if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                /**\n                 * Checks if changing file name results in two blovkly files\n                 * @param {string} oldname The old file name\n                 * @param {string} newname The new file name\n                 * @returns {boolean} if results two two blovkly files\n                 */\n                function twoBlockly(oldname, newname) {\n                    if (VPLUtil.isBlockly(oldname)) {\n                        return false;\n                    }\n                    if (VPLUtil.isBlockly(newname)) {\n                        for (var i = 0; i < files.length; i++) {\n                            if (VPLUtil.isBlockly(files[i].getFileName())) {\n                                return true;\n                            }\n                        }\n                    }\n                    return false;\n                }\n                this.restrictedPaste = restrictedPaste;\n                this.dropHandler = dropHandler;\n                this.dragoverHandler = dragoverHandler;\n                this.readOnly = readOnly;\n                this.readOnlyFiles = readOnlyFiles;\n                this.restrictedEdit = restrictedEdit;\n                this.adjustTabsTitles = adjustTabsTitles;\n                this.minNumberOfFiles = minNumberOfFiles;\n                this.scrollBarWidth = scrollBarWidth;\n                var localClipboard = \"\";\n                this.setClipboard = function(t) {\n                    localClipboard = t;\n                };\n                this.getClipboard = function() {\n                    return localClipboard;\n                };\n                this.getTabPos = function(fileId) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == fileId) {\n                            return i;\n                        }\n                    }\n                    return openFiles.length;\n                };\n                this.getTheme = function() {\n                    return options.theme;\n                };\n                this.setTheme = function(theme) {\n                    options.theme = theme;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setTheme(theme);\n                    }\n                };\n                this.addTab = function(fid) {\n                    var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n                    tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n                    tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n                };\n                this.removeTab = function(fid) {\n                    tabsUl.find('#vpl_tab_name' + fid).remove();\n                    tabs.find('#vpl_file' + fid).remove();\n                };\n                this.isReadOnly = function(fileName) {\n                    return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n                };\n                this.open = function(pos) {\n                    var file;\n                    if (typeof pos == 'object') {\n                        file = pos;\n                    } else {\n                        file = files[pos];\n                    }\n                    if (file.isOpen()) {\n                        return;\n                    }\n                    var fid = file.getId();\n                    self.addTab(fid);\n                    openFiles.push(file);\n                    menuButtons.setGetkeys(file.open());\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.closeFile = function(file) {\n                    if (!file.isOpen()) {\n                        return;\n                    }\n                    var pos;\n                    var fid = file.getId();\n                    file.close();\n                    VPLUI.hideIDEStatus();\n                    self.removeTab(fid);\n                    var ptab = self.getTabPos(fid);\n                    openFiles.splice(ptab, 1);\n                    tabs.tabs('refresh');\n                    adjustTabsTitles(false);\n                    self.fileListVisible(true);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n                    if (openFiles.length == ptab) {\n                        ptab--;\n                    }\n                    if (ptab >= 0 && openFiles.length > ptab) {\n                        pos = self.getFilePosById(openFiles[ptab].getId());\n                        self.gotoFile(pos, 'c');\n                        return;\n                    }\n                };\n                this.isClosed = function(pos) {\n                    return !files[pos].isOpen();\n                };\n                this.fileListVisible = function(b) {\n                    if (b === fileListContainer.vplVisible) {\n                        return;\n                    }\n                    if (b) {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = true;\n                            self.updateFileList();\n                            fileListContainer.show();\n                            autoResizeTab();\n                         });\n                    } else {\n                        VPLUtil.delay('fileListVisible', function() {\n                            fileListContainer.vplVisible = false;\n                            fileListContainer.hide();\n                            autoResizeTab();\n                         });\n                    }\n                };\n                this.isFileListVisible = function() {\n                    return fileListContainer.vplVisible;\n                };\n                this.fileListVisibleIfNeeded = function() {\n                    if (this.isFileListVisible()) {\n                        return;\n                    }\n                    for (var i = 0; i < files.length; i++) {\n                        if (!files[i].isOpen()) {\n                            this.fileListVisible(true);\n                            return;\n                        }\n                    }\n                };\n                this.setFontSize = function(size) {\n                    options.fontSize = size;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].setFontSize(size);\n                    }\n                    terminal.setFontSize(size);\n                };\n                this.getFontSize = function() {\n                    return options.fontSize;\n                };\n                this.addFile = function(file, replace, ok, showError) {\n                    if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                        showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                        return false;\n                    }\n                    if (replace !== true) {\n                        replace = false;\n                    }\n                    var pos = this.fileNameExists(file.name);\n                    if (pos != -1) {\n                        if (replace && !files[pos].isReadOnly()) {\n                            files[pos].setContent(file.contents);\n                            self.setModified();\n                            ok();\n                            VPLUtil.delay('updateFileList', self.updateFileList);\n                            return file;\n                        } else {\n                            showError(str('filenotadded', file.name));\n                            return false;\n                        }\n                    }\n                    if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                        showError(str('filenotadded', file.name));\n                        return false;\n                    }\n                    if (files.length >= maxNumberOfFiles) {\n                        showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                        return false;\n                    }\n                    var fid = VPLUtil.getUniqueId();\n                    var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n                    if (file.encoding == 1) {\n                        newfile.extendToBinary();\n                    } else {\n                        if (VPLUtil.isBlockly(file.name)) {\n                            newfile.extendToBlockly();\n                        } else {\n                            newfile.extendToCodeEditor();\n                        }\n                    }\n                    newfile.setFileName(file.name);\n                    files.push(newfile);\n                    self.setModified();\n                    if (files.length > 5) {\n                        self.fileListVisible(true);\n                    }\n                    ok();\n                    return newfile;\n                };\n                this.renameFile = function(oldname, newname, showError) {\n                    var pos = this.fileNameExists(oldname);\n                    try {\n                        if (pos == -1) {\n                            throw new Error(\"Internal error: File name not found\");\n                        }\n                        if (files[pos].getId() < this.minNumberOfFiles) {\n                            throw new Error(\"Internal error: Renaming requested filename\");\n                        }\n                        if (files[pos].getFileName() == newname) {\n                            return true; // Equals name file.\n                        }\n                        if (!VPLUtil.validPath(newname) ||\n                               fileNameIncluded(newname) ||\n                               twoBlockly(oldname, newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (files[pos].isBinary() && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                            throw str('incorrect_file_name');\n                        }\n                        if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                            if (files[pos].getContent() > '') {\n                                showMessage(str('delete_file_fq', oldname), {\n                                    ok: function() {\n                                        var file = {\n                                            name: newname,\n                                            contents: '',\n                                            encoding: 0\n                                        };\n                                        fileManager.deleteFile(oldname, showError);\n                                        var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                        if (fileResult) {\n                                            fileManager.gotoFileName(newname);\n                                        }\n                                    }\n                                });\n                            } else {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                            return true;\n                        }\n                        files[pos].setFileName(newname);\n                    } catch (e) {\n                        showError(str('filenotrenamed', oldname) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.directoryExists = function(dirName) {\n                    var checkName = dirName.toLowerCase() + '/';\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n                this.renameDirectory = function(oldName, newName, showError) {\n                    if (oldName == newName) {\n                        return false;\n                    }\n                    try {\n                        if (!this.directoryExists(oldName)) {\n                            throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                        }\n                        if (!VPLUtil.validPath(newName + '/file.txt')) {\n                            throw str('incorrect_directory_name');\n                        }\n                        // Prepare new names\n                        var oldNameLength = oldName.length + 1;\n                        var checkDirName = oldName.toLowerCase() + '/';\n                        var newFileNames = [];\n                        var i;\n                        for (i = 0; i < files.length; i++) {\n                            var fileName = files[i].getFileName();\n                            if (fileName.toLowerCase().startsWith(checkDirName)) {\n                                if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                                    throw str('incorrect_file_name');\n                                }\n                                newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                            }\n                        }\n                        if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                            var oldNames = [];\n                            for (i = 0; i < files.length; i++) {\n                                oldNames[files[i].getFileName().toLowerCase()] = true;\n                            }\n                            for (i = 0; i < files.length; i++) {\n                                if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                                    throw str('incorrect_file_name');\n                                }\n                            }\n                        }\n                        // Set the new file names\n                        for (i = 0; i < newFileNames.length; i++) {\n                            if (newFileNames[i]) {\n                                files[i].setFileName(newFileNames[i]);\n                            }\n                        }\n                    } catch (e) {\n                        showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                        return false;\n                    }\n                    self.setModified();\n                    adjustTabsTitles(false);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.deleteFile = function(name, showError) {\n                    var pos = this.fileNameExists(name);\n                    if (pos == -1) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    if (files[pos].getId() < minNumberOfFiles) {\n                        showError(str('filenotdeleted', name));\n                        return false;\n                    }\n                    this.setModified();\n                    this.closeFile(files[pos]);\n                    files.splice(pos, 1);\n                    if (openFiles.length == 0) {\n                        VPLUI.hideIDEStatus();\n                    }\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return true;\n                };\n                this.currentFile = function() {\n                    var id = tabs.tabs('option', 'active');\n                    if (id in openFiles) {\n                        var file = openFiles[id];\n                        if (arguments.length === 0) {\n                            return file;\n                        }\n                        var action = arguments[0];\n                        if (typeof file[action] === 'function') {\n                            var fun = file[action];\n                            var args = Array.prototype.slice(arguments);\n                            args.shift();\n                            return fun.apply(file, args);\n                        }\n                    }\n                    return false;\n                };\n                this.getCurrentFileName = function() {\n                    var currentFileName = '';\n                    var currentFile = fileManager.currentFile();\n                    if (currentFile) {\n                        currentFileName = currentFile.name;\n                    }\n                    return currentFileName;\n                };\n                this.currentPos = function() {\n                    return tabs.tabs('option', 'active');\n                };\n                this.getFileTab = function(id) {\n                    for (var i = 0; i < openFiles.length; i++) {\n                        if (openFiles[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.getFilePosById = function(id) {\n                    for (var i = 0; i < files.length; i++) {\n                        if (files[i].getId() == id) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                };\n                this.gotoFile = function(pos, l) {\n                    var file = files[pos];\n                    self.open(file);\n                    tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n                    if (l !== 'c') {\n                        file.gotoLine(parseInt(l, 10));\n                    }\n                    file.focus();\n                };\n                this.gotoFileLink = function(a) {\n                    var tag = $(a);\n                    var fname = tag.data('file');\n                    var fpos = -1;\n                    if (fname > '') {\n                        fpos = this.fileNameExists(fname);\n                    } else {\n                        fpos = self.getFilePosById(tag.data('fileid'));\n                    }\n                    if (fpos >= 0) {\n                        var line = tag.data('line');\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.gotoFileName = function(fname, line) {\n                    var fpos = this.fileNameExists(fname);\n                    if (fpos >= 0) {\n                        if (typeof line == 'undefined') {\n                            line = 'c';\n                        }\n                        self.gotoFile(fpos, line);\n                        return true;\n                    }\n                    return false;\n                };\n                this.getFilesToSave = function() {\n                    var ret = [];\n                    for (var i = 0; i < files.length; i++) {\n                        var file = {};\n                        file.name = files[i].getFileName();\n                        file.contents = files[i].getContent();\n                        file.encoding = files[i].isBinary() ? 1 : 0;\n                        ret.push(file);\n                    }\n                    return ret;\n                };\n                this.resetModified = function() {\n                    modified = false;\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].resetModified();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                };\n                this.setModified = function() {\n                    modified = true;\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    VPLUtil.delay('updateMenu', updateMenu);\n                };\n                this.isModified = function() {\n                    return modified;\n                };\n                this.length = function() {\n                    return files.length;\n                };\n                this.clearAnnotations = function() {\n                    for (var i = 0; i < files.length; i++) {\n                        files[i].clearAnnotations();\n                    }\n                };\n                this.getFile = function(i) {\n                    return files[i];\n                };\n                this.getFiles = function() {\n                    return files;\n                };\n                this.getDirectoryStructure = function() {\n                    var structure = {\n                        isDir: true,\n                        content: {},\n                        path: '',\n                    };\n                    /**\n                     * Adds a new file the structure of directories\n                     * @param {int} i Index of file to add in the file array\n                     */\n                    function addFilePath(i) {\n                        var file = files[i];\n                        var fileName = file.getFileName();\n                        var path = fileName.split(\"/\");\n                        var curdir = structure;\n                        var pathdir = '';\n                        for (var p = 0; p < path.length; p++) {\n                            var part = path[p];\n                            if (p == path.length - 1) { // File.\n                                curdir.content[part] = {\n                                    isDir: false,\n                                    content: file,\n                                    pos: i,\n                                };\n                            } else {\n                                pathdir += part;\n                                if (!curdir.content[part]) { // New dir.\n                                    curdir.content[part] = {\n                                        isDir: true,\n                                        content: {},\n                                        path: pathdir,\n                                    };\n                                }\n                                // Descend Dir.\n                                pathdir += '/';\n                                curdir = curdir.content[part];\n                            }\n                        }\n                    }\n                    for (var i in files) {\n                        if (files.hasOwnProperty(i)) {\n                            addFilePath(i);\n                        }\n                    }\n                    return structure;\n                };\n                this.generateFileList = function() {\n                    if (!self.isFileListVisible()) {\n                        return;\n                    }\n                    var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n                    /**\n                     * Generates an array of string with the HTML code to represent the list of IDE files\n                     * @param {Object} dir Current directory\n                     * @param {int} indent Html code to indent subdirectories\n                     * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n                     */\n                    function lister(dir, indent, lines) {\n                        var name, fd, sname, attrs, dirline, file, path, line;\n                        for (name in dir.content) {\n                            if (dir.content.hasOwnProperty(name)) {\n                                fd = dir.content[name];\n                                if (fd.isDir) {\n                                    var dirpath = VPLUtil.sanitizeText(fd.path);\n                                    attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\n                                    sname = VPLUtil.sanitizeText(name);\n                                    dirline = indent;\n                                    dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\n                                    lines.push(dirline);\n                                    lister(fd, indent + dirIndent, lines);\n                                } else {\n                                    file = fd.content;\n                                    sname = VPLUtil.sanitizeText(name);\n                                    path = VPLUtil.sanitizeText(file.getFileName());\n                                    if (file.isOpen()) {\n                                        sname = '<b>' + sname + '</b>';\n                                    }\n                                    attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                                    line = '<a ' + attrs + '>' + sname + '</a>';\n                                    if (file.isModified()) {\n                                        line = VPLUI.iconModified() + line;\n                                    }\n                                    if (file.isReadOnly()) {\n                                        line = line + VPLUI.iconReadOnly();\n                                    } else if (file.getId() < minNumberOfFiles) {\n                                        line = line + VPLUI.iconRequired();\n                                    }\n                                    lines.push(indent + line);\n                                }\n                            }\n                        }\n                    }\n\n                    var structure = self.getDirectoryStructure();\n                    var lines = [];\n                    var html = '';\n                    lister(structure, '', lines);\n                    for (var i = 0; i < lines.length; i++) {\n                        html += lines[i] + '<br>';\n                    }\n                    fileListContent.html('<div>' + html + '</div>');\n                };\n                tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n                    fileManager.closeFile(fileManager.currentFile());\n                });\n                tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n                tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n                fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n            }\n            this.updateEvaluationNumber = function(res) {\n                if (typeof res.nevaluations != 'undefined') {\n                    var text = res.nevaluations;\n                    if (typeof res.reductionbyevaluation != 'undefined'\n                         && res.reductionbyevaluation > ''\n                         && res.reductionbyevaluation != 0) {\n                        if (res.freeevaluations != 0) {\n                            text = text + '/' + res.freeevaluations;\n                        }\n                        text = text + ' -' + res.reductionbyevaluation;\n                    }\n                    menuButtons.setExtracontent('evaluate', text);\n                }\n            };\n            this.lastResult = null;\n            this.getTerminal = function() {\n                return terminal;\n            };\n            this.setResultGrade = function(content, raw) {\n                var name = 'grade';\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResultTab = function(name, content, raw) {\n                var titleclass = 'vpl_ide_accordion_t_' + name;\n                var contentclass = 'vpl_ide_accordion_c_' + name;\n                if (result.find('.' + contentclass).length == 0) {\n                    result.append('<div class=\"' + titleclass + '\"></div>');\n                    result.append('<div class=\"' + contentclass + '\"></div>');\n                }\n                if (typeof raw == 'undefined') {\n                    return result.find('h4.' + titleclass).length > 0;\n                }\n                var titleTag = result.find('.' + titleclass);\n                var contentTag = result.find('.' + contentclass);\n                var HTMLcontent = $('<div>' + content + '</div>');\n                HTMLcontent.find('h4').replaceWith(function() {\n                    return $(\"<h5>\").append($(this).contents());\n                });\n                if (contentTag.html() == HTMLcontent.html()) {\n                    return content > '';\n                }\n                if (content > '') {\n                    titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n                    contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n                    return true;\n                } else {\n                    titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n                    contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n                    return false;\n                }\n            };\n            this.setResult = function(res, go) {\n                self.updateEvaluationNumber(res);\n                var files = fileManager.getFiles();\n                var fileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    fileNames[i] = files[i].getFileName();\n                    files[i].clearAnnotations();\n                }\n                var show = false;\n                var hasContent;\n                var grade = VPLUtil.sanitizeText(res.grade);\n                var gradeShow;\n                var formated;\n                gradeShow = self.setResultGrade(grade, res.grade);\n                show = show || gradeShow;\n                hasContent = self.setResultTab('variables', res.variables, res.variables);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n                hasContent = self.setResultTab('compilation', formated, res.compilation);\n                show = show || hasContent;\n                formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n                hasContent = self.setResultTab('comments', formated, res.evaluation);\n                show = show || hasContent;\n                formated = VPLUtil.sanitizeText(res.execution);\n                hasContent = self.setResultTab('execution', formated, res.execution);\n                show = show || hasContent;\n                hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n                if (hasContent && typeof MathJax == 'object') { // MathJax workaround.\n                    var math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                    MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, math]);\n                }\n                show = show || hasContent;\n                if (show) {\n                    resultContainer.show();\n                    resultContainer.vplVisible = true;\n                    result.accordion(\"refresh\");\n                    result.accordion('option', 'active', gradeShow ? 1 : 0);\n                    for (i = 0; i < files.length; i++) {\n                        var anot = files[i].getAnnotations();\n                        for (var j = 0; j < anot.length; j++) {\n                            if (go || anot[j].type == 'error') {\n                                fileManager.gotoFile(i, anot[j].row + 1);\n                                break;\n                            }\n                        }\n                    }\n                    $('#vpl_ide_shrightpanel').show();\n                } else {\n                    resultContainer.hide();\n                    resultContainer.vplVisible = false;\n                    $('#vpl_ide_shrightpanel').hide();\n                }\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            };\n\n            result.accordion({\n                heightStyle: 'fill',\n                header: 'h4',\n                animate: false,\n                beforeActivate: avoidSelectGrade,\n            });\n            resultContainer.width(2 * resultContainer.vplMinWidth);\n            result.on('click', 'a', function(event) {\n                if (fileManager.gotoFileLink(event.currentTarget)) {\n                    event.preventDefault();\n                }\n            });\n            resultContainer.vplVisible = false;\n            resultContainer.hide();\n\n            fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n            fileList.text(str('filelist'));\n            fileList.html(VPLUI.iconFolder() + fileList.html());\n            fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n            fileListContent.addClass(\"ui-widget ui-corner-all\");\n            fileListContainer.width(2 * fileListContainer.vplMinWidth);\n            fileListContainer.on('click', 'a', function(event) {\n                event.preventDefault();\n                fileManager.gotoFileLink(event.currentTarget);\n            });\n            fileListContainer.vplVisible = false;\n            fileListContainer.hide();\n            var tabsAir = false;\n            /**\n             * Returns separation space\n             * @returns {int} size in pixels\n             */\n            function getTabsAir() {\n                if (tabsAir === false) {\n                    tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n                }\n                return tabsAir;\n            }\n            /**\n             * Resize tab width\n             * @param {Event} e Unused\n             * @param {Object} ui UI object\n             */\n            function resizeTabWidth(e, ui) {\n                var diffLeft = ui.position.left - ui.originalPosition.left;\n                var maxWidth;\n                if (diffLeft !== 0) {\n                    maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n                } else {\n                    maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n                    tabs.resizable('option', 'maxWidth', maxWidth);\n                    var diffWidth = ui.size.width - ui.originalSize.width;\n                    resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n                }\n                fileManager.currentFile('adjustSize');\n            }\n            var resizableOptions = {\n                containment: 'parent',\n                resize: resizeTabWidth,\n                start: function() {\n                    $(window).off('resize', autoResizeTab);\n                    tabs.resizable('option', 'minWidth', 100);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.vplOriginalWidth = resultContainer.width();\n                    }\n                    if (fileListContainer.vplVisible) {\n                        fileListContainer.vplOriginalWidth = fileListContainer.width();\n                    }\n                },\n                stop: function(e, ui) {\n                    resizeTabWidth(e, ui);\n                    tabs.resizable('option', 'maxWidth', 100000);\n                    tabs.resizable('option', 'minWidth', 0);\n                    autoResizeTab();\n                    $(window).on('resize', autoResizeTab);\n                },\n                handles: \"\"\n            };\n            tabs.resizable(resizableOptions);\n             /**\n              * Updates handles for internal IDE resize\n              */\n            function updateTabsHandles() {\n                var handles = ['e', 'w', 'e', 'e, w'];\n                var index = 0;\n                index += fileListContainer.vplVisible ? 1 : 0;\n                index += resultContainer.vplVisible ? 2 : 0;\n                tabs.resizable('destroy');\n                resizableOptions.handles = handles[index];\n                resizableOptions.disable = index === 0;\n                tabs.resizable(resizableOptions);\n            }\n            /**\n             * Resize the IDE height\n             */\n            function resizeHeight() {\n                var newHeight = $(window).outerHeight();\n                newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n                if (newHeight < 250) {\n                    newHeight = 250;\n                }\n                tr.height(newHeight);\n                var panelHeight = newHeight - 3 * getTabsAir();\n                tabs.height(panelHeight);\n                if (resultContainer.vplVisible) {\n                    resultContainer.height(panelHeight + getTabsAir());\n                    result.accordion('refresh');\n                }\n                if (fileListContainer.vplVisible) {\n                    fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n                    fileListContainer.height(panelHeight);\n                }\n            }\n            adjustTabsTitles = function(center) {\n                var newWidth = tabs.width();\n                var tabsUlWidth = 0;\n                tabsUl.width(100000);\n                var last = tabsUl.children('li:visible').last();\n                if (last.length) {\n                    var parentScrollLeft = tabsUl.parent().scrollLeft();\n                    tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n                    tabsUl.width(tabsUlWidth);\n                    var file = fileManager.currentFile();\n                    if (file && center) {\n                        var fileTab = $(file.getTabNameId());\n                        var scroll = parentScrollLeft + fileTab.position().left;\n                        scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                        if (scroll < 0) {\n                            scroll = 0;\n                        }\n                        tabsUl.parent().finish().animate({\n                            scrollLeft: scroll\n                        }, 'slow');\n                    }\n                }\n                if (tabsUlWidth < newWidth) {\n                    tabsUl.width('');\n                }\n            };\n            autoResizeTab = function() {\n                var oldWidth = tabs.width();\n                var newWidth = menu.width();\n                var planb = false;\n                updateTabsHandles();\n                tr.width(menu.outerWidth());\n                if (fileListContainer.vplVisible) {\n                    var left = fileListContainer.outerWidth() + tabsAir;\n                    oldWidth += left;\n                    if (left >= 100) {\n                        newWidth -= left;\n                        tabs.css('left', left);\n                    } else {\n                        planb = true;\n                    }\n                } else {\n                    tabs.css('left', 0);\n                }\n                if (resultContainer.vplVisible) {\n                    var right = resultContainer.outerWidth() + tabsAir;\n                    oldWidth += right;\n                    newWidth -= right;\n                    if (newWidth < 100) {\n                        planb = true;\n                    }\n                }\n                if (planb) {\n                    var rel = menu.width() / oldWidth;\n                    var wfl = 0;\n                    if (fileListContainer.vplVisible) {\n                        wfl = fileListContainer.width() * rel;\n                        fileListContainer.width(wfl - tabsAir);\n                        wfl += tabsAir;\n                        tabs.css('left', wfl);\n                    }\n                    tabs.width(tabs.width() * rel);\n                    if (resultContainer.vplVisible) {\n                        resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n                    }\n                } else {\n                    tabs.width(newWidth);\n                }\n                adjustTabsTitles(true);\n                resizeHeight();\n                fileManager.currentFile('adjustSize');\n            };\n            /**\n             * Transfer focus to current file\n             */\n            function focusCurrentFile() {\n                fileManager.currentFile('focus');\n            }\n            var dialogbaseOptions = $.extend({}, {\n                close: focusCurrentFile\n            }, VPLUI.dialogbaseOptions);\n            /**\n             * Shows a dialog with a message.\n             * @param {string} message\n             * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n             * @returns {JQuery} JQueryUI Dialog object already open\n             */\n            function showMessage(message, options) {\n                return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n            }\n            showErrorMessage = function(message) {\n                return VPLUI.showErrorMessage(message, {\n                    close: focusCurrentFile\n                });\n            };\n\n            var dialogNew = $('#vpl_ide_dialog_new');\n            /**\n             * The event handler for the new file action\n             * @param {Object} event\n             * @return {boolean}\n             */\n            function newFileHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return true;\n                }\n                dialogNew.dialog('close');\n                var file = {\n                    name: $('#vpl_ide_input_newfilename').val(),\n                    contents: '',\n                    encoding: 0\n                };\n                var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                if (newfile) {\n                    fileManager.open(newfile);\n                    tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n                    newfile.focus();\n                    return true;\n                }\n                return false;\n            }\n\n            var dialogButtons = {};\n            dialogButtons[str('ok')] = newFileHandler;\n            dialogButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogNew.find('input').on('keypress', newFileHandler);\n            dialogNew.dialog($.extend({}, dialogbaseOptions, {\n                title: str('create_new_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n            var dialogRename = $('#vpl_ide_dialog_rename');\n            /**\n             * The event handler for the rename current file action\n             * @param {Object} event\n             */\n            function renameHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRename.dialog('close');\n                fileManager.renameFile(fileManager.currentFile('getFileName'),\n                        $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRename.find('input').on('keypress', renameHandler);\n            dialogButtons[str('ok')] = renameHandler;\n            dialogRename.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n                },\n                title: str('rename_file'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n            var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n            /**\n             * The event handler for rename a directory\n             * @param {Object} event\n             */\n            function renameDirectoryHandler(event) {\n                if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n                    return;\n                }\n                dialogRenameDirectory.dialog('close');\n                fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                        $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n                event.preventDefault();\n            }\n            dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n            dialogButtons[str('ok')] = renameDirectoryHandler;\n            dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n                title: str('rename_directory'),\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n            renameDiretoryAction = function(event) {\n                if (event.target.hasAttribute('data-dirname')) {\n                    var dirname = event.target.getAttribute('data-dirname');\n                    $('#vpl_ide_input_olddirectoryname').val(dirname);\n                    $('#vpl_ide_input_renamedirectory').val(dirname);\n                    dialogRenameDirectory.dialog('open');\n                }\n            };\n            var dialogComments = $('#vpl_ide_dialog_comments');\n            var oldStudentComments = '';\n            dialogButtons[str('ok')] = function() {\n                if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n                    fileManager.setModified();\n                }\n                $(this).dialog('close');\n            };\n            dialogComments.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    oldStudentComments = $('#vpl_ide_input_comments').val();\n                },\n                title: str('comments'),\n                width: '40em',\n                buttons: dialogButtons\n            }));\n            VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n            $('#vpl_ide_input_comments').width('30em');\n            var aboutDialog = $('#vpl_ide_dialog_about');\n            var OKButtons = {};\n            OKButtons[str('ok')] = function() {\n                $(this).dialog('close');\n            };\n            var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n            shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    $('#vpl_ide_dialog_shortcuts').html(html);\n                },\n                title: str('shortcuts'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            shortcutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n            OKButtons[str('shortcuts')] = function() {\n                $(this).dialog('close');\n                shortcutDialog.dialog('open');\n            };\n            aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n                open: function() {\n                    var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n                    aboutDialog.next().find(\"button\").filter(\n                        function() {\n                            return $(this).text() == str('shortcuts');\n                        }\n                  ).button(html != '' ? 'enable' : 'disable');\n                },\n                title: str('about'),\n                width: 400,\n                height: 300,\n                buttons: OKButtons\n            }));\n            aboutDialog.dialog('option', 'height', 300);\n            VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n            var dialogSort = $('#vpl_ide_dialog_sort');\n            var dialogSortButtons = {};\n            dialogSortButtons[str('ok')] = function() {\n                var files = fileManager.getFiles();\n                var regNoNumber = /[^\\d]*/;\n                var sorted = [];\n                var i = 0;\n                var newOrder = $('#vpl_sort_list li');\n                if (newOrder.length != files.length) {\n                    return;\n                }\n                newOrder.each(function() {\n                    var orig = parseInt(this.id.replace(regNoNumber, ''));\n                    sorted.push(files[orig]);\n                });\n                for (i = 0; i < newOrder.length; i++) {\n                    files[i] = sorted[i];\n                }\n                fileManager.setModified();\n                $(this).dialog('close');\n            };\n            dialogSortButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogSort.dialog($.extend({}, dialogbaseOptions, {\n                title: str('sort'),\n                buttons: dialogSortButtons,\n                open: function() {\n                    var list = $('#vpl_sort_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = 0; i < files.length; i++) {\n                        var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                        if (files[i].getId() < minNumberOfFiles) {\n                            file.addClass('ui-state-disabled');\n                        }\n                        file.text((i + 1) + '-' + files[i].getFileName());\n                        list.append(file);\n                    }\n                    list.sortable({\n                        items: \"li:not(.ui-state-disabled)\",\n                        placeholder: \"ui-state-highlight\",\n                        start: function(event, ui) {\n                            ui.item.addClass('ui-state-highlight');\n                        },\n                        stop: function(event, ui) {\n                            ui.item.removeClass('ui-state-highlight');\n                        },\n                    });\n                    list.disableSelection();\n                },\n                maxHeight: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n            var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n            var dialogMultideleteButtons = {};\n            dialogMultideleteButtons[str('selectall')] = function() {\n                $(this).find('input').prop(\"checked\", true);\n            };\n            dialogMultideleteButtons[str('deselectall')] = function() {\n                $(this).find('input').prop(\"checked\", false);\n            };\n            dialogMultideleteButtons[str('deleteselected')] = function() {\n                var files = fileManager.getFiles();\n                var toDeleteList = [];\n                var labelList = $('#vpl_multidelete_list label');\n                labelList.each(function() {\n                    var label = $(this);\n                    if (label.find('input').prop('checked')) {\n                        var id = label.data('fileid');\n                        toDeleteList.push(files[id].getFileName());\n                    }\n                });\n                for (var i = 0; i < toDeleteList.length; i++) {\n                    fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n                }\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                $(this).dialog('close');\n            };\n            dialogMultideleteButtons[str('cancel')] = function() {\n                $(this).dialog('close');\n            };\n            dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n                title: str('multidelete'),\n                buttons: dialogMultideleteButtons,\n                open: function() {\n                    var list = $('#vpl_multidelete_list');\n                    list.html('');\n                    var files = fileManager.getFiles();\n                    for (var i = minNumberOfFiles; i < files.length; i++) {\n                        var name = VPLUtil.sanitizeText(files[i].getFileName());\n                        var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                        file.data('fileid', i);\n                        list.append(file);\n                        list.append('<br>');\n                    }\n                    list.find('label').button();\n                },\n                maxHeight: 400,\n                maxWidth: 400\n            }));\n            VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n            var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n            var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n            var dialogFontFizeButtons = {};\n            dialogFontFizeButtons[str('ok')] = function() {\n                var value = fontsizeSlider.slider(\"value\");\n                fileManager.setFontSize(value);\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({fontSize: value});\n            };\n            dialogFontFizeButtons[str('cancel')] = function() {\n                fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n                $(this).dialog('close');\n            };\n            dialogFontFizeButtons[str('reset')] = function() {\n                fontsizeSlider.slider('value', 12);\n            };\n            dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n                title: str('fontsize'),\n                buttons: dialogFontFizeButtons,\n                open: function() {\n                    fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n                    fontsizeSlider.slider('value', fileManager.getFontSize());\n                },\n            }));\n            fontsizeSlider.slider({\n                min: 1,\n                max: 48,\n                change: function() {\n                    var value = fontsizeSlider.slider(\"value\");\n                    fileManager.setFontSize(value);\n                    dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n                }\n            });\n            VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n            var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n            var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n            var dialogAceThemeButtons = {};\n            dialogAceThemeButtons[str('ok')] = function() {\n                fileManager.setTheme(acethemeSelect.val());\n                $(this).dialog('close');\n                VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n            };\n            dialogAceThemeButtons[str('cancel')] = function() {\n                fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n                $(this).dialog('close');\n            };\n            dialogAceThemeButtons[str('reset')] = function() {\n                acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n                fileManager.setTheme(acethemeSelect.val());\n            };\n            dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n                title: str('theme'),\n                buttons: dialogAceThemeButtons,\n                modal: false,\n                open: function() {\n                    acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n                    acethemeSelect.val(fileManager.getTheme());\n                },\n            }));\n            acethemeSelect.on('change', function() {\n                    fileManager.setTheme(acethemeSelect.val());\n            });\n            VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n            var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n            var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n            var lastConsole = terminal;\n            var fileSelect = $('#vpl_ide_input_file');\n            var fileSelectHandler = function() {\n                VPLUI.readSelectedFiles(this.files, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n            };\n            fileSelect.on('change', fileSelectHandler);\n            // Menu acctions.\n            menuButtons.add({\n                name: 'filelist',\n                originalAction: function() {\n                    fileManager.fileListVisible(!fileManager.isFileListVisible());\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                    VPLUtil.delay('updateFileList', fileManager.updateFileList);\n                },\n                bindKey: {\n                    win: 'Ctrl-L',\n                    mac: 'Ctrl-L'\n                }\n            });\n\n            menuButtons.add({\n                name: 'new',\n                originalAction: function() {\n                    if (fileManager.length() < maxNumberOfFiles) {\n                        dialogNew.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Alt-N',\n                    mac: 'Option-N'\n                }\n            });\n            menuButtons.add({\n                name: 'rename',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (file && file.getId() >= minNumberOfFiles) {\n                        dialogRename.dialog('open');\n                    }\n                },\n                bindKey: {\n                    win: 'Ctrl-R',\n                    mac: 'Ctrl-R'\n                }\n            });\n            menuButtons.add({\n                name: 'delete',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    var filename = file.getFileName();\n                    var message = str('delete_file_fq', filename);\n                    showMessage(message, {\n                        ok: function() {\n                            fileManager.deleteFile(filename, showErrorMessage);\n                        },\n                        title: str('delete_file_q'),\n                        icon: 'trash'\n                    });\n                },\n                bindKey: {\n                    win: 'Ctrl-D',\n                    mac: 'Ctrl-D'\n                }\n            });\n            menuButtons.add({\n                name: 'close',\n                originalAction: function() {\n                    var file = fileManager.currentFile();\n                    if (!file) {\n                        return;\n                    }\n                    fileManager.closeFile(file);\n                },\n                bindKey: {\n                    win: 'Alt-W',\n                    mac: 'Option-W'\n                }\n            });\n            menuButtons.add({\n                name: 'import',\n                originalAction: function() {\n                    fileSelect.val('');\n                    fileSelect.trigger('click');\n                },\n                bindKey: {\n                    win: 'Ctrl-I',\n                    mac: 'Ctrl-I'\n                }\n            });\n            menuButtons.add({\n                name: 'sort',\n                originalAction: function() {\n                    dialogSort.dialog('open');\n                },\n                bindKey: {\n                    win: 'Ctrl-O',\n                    mac: 'Ctrl-O'\n                }\n            });\n            menuButtons.add({\n                name: 'multidelete',\n                originalAction: function() {\n                    dialogMultidelete.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'showparentfiles',\n                originalAction: function() {\n                    openpopup(null, {\n                        url: options.showparentfilesurl,\n                        options: 'width=' + Math.max(screen.availWidth/2, 780) +\n                                 ',height=' + screen.availHeight +\n                                 ',left=' + (screen.availWidth/4)\n                    });\n                }\n            });\n            menuButtons.add({\n                name: 'fontsize',\n                originalAction: function() {\n                    dialogFontsize.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'theme',\n                originalAction: function() {\n                    dialogAceTheme.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'print',\n                originalAction: function() {\n                    window.print();\n                },\n                bindKey: {\n                    win: 'Alt-P',\n                    mac: 'Command-P'\n                }\n            });\n            menuButtons.add({\n                name: 'undo',\n                originalAction: function() {\n                    fileManager.currentFile('undo');\n                }\n            });\n            menuButtons.add({\n                name: 'redo',\n                originalAction: function() {\n                    fileManager.currentFile('redo');\n                }\n            });\n            menuButtons.add({\n                name: 'select_all',\n                editorName: 'selectall',\n                originalAction: function() {\n                    fileManager.currentFile('selectAll');\n                }\n            });\n            menuButtons.add({\n                name: 'find',\n                originalAction: function() {\n                    fileManager.currentFile('find');\n                }\n            });\n            menuButtons.add({\n                name: 'find_replace',\n                editorName: 'replace',\n                originalAction: function() {\n                    fileManager.currentFile('replace');\n                }\n            });\n            menuButtons.add({\n                name: 'next',\n                editorName: 'findnext',\n                originalAction: function() {\n                    fileManager.currentFile('next');\n                }\n            });\n            menuButtons.add({\n                name: 'fullscreen',\n                originalAction: function() {\n                    if (fullScreen) {\n                        rootObj.removeClass('vpl_ide_root_fullscreen');\n                        $('body').removeClass('vpl_body_fullscreen');\n                        menuButtons.setText('fullscreen', 'fullscreen');\n                        $('#vpl_ide_user').hide();\n                        fullScreen = false;\n                    } else {\n                        $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                        rootObj.addClass('vpl_ide_root_fullscreen');\n                        menuButtons.setText('fullscreen', 'regularscreen');\n                        if (options.username) {\n                            $('#vpl_ide_user').show();\n                        }\n                        fullScreen = true;\n                    }\n                    focusCurrentFile();\n                    setTimeout(autoResizeTab, 10);\n                },\n                bindKey: {\n                    win: 'Alt-F',\n                    mac: 'Ctrl-F'\n                }\n            });\n            menuButtons.add({\n                name: 'download',\n                originalAction: function() {\n                    window.location = options.download;\n                }\n            });\n            /**\n             * Reset files action\n             */\n            function resetFiles() {\n                VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n                .done(function(response) {\n                    var files = response.files;\n                    for (var fileName in files) {\n                        if (files.hasOwnProperty(fileName)) {\n                            fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                        }\n                    }\n                    fileManager.fileListVisibleIfNeeded();\n                    VPLUtil.delay('updateMenu', updateMenu);\n                }).fail(showErrorMessage);\n            }\n            menuButtons.add({\n                name: 'resetfiles',\n                originalAction: function() {\n                    showMessage(str('sureresetfiles'), {\n                        title: str('resetfiles'),\n                        ok: resetFiles,\n                        icon: 'resetfiles'\n                    });\n                }\n            });\n            var noconfirmation = false;\n            menuButtons.add({\n                name: 'save',\n                originalAction: function() {\n                    var data = {\n                        files: fileManager.getFilesToSave(),\n                        comments: $('#vpl_ide_input_comments').val(),\n                        version: noconfirmation ? -1 : fileManager.getVersion()\n                    };\n                    if (JSON.stringify(data).length > options.postMaxSize) {\n                        showErrorMessage(str('maxpostsizeexceeded'));\n                        return;\n                    }\n                    /**\n                     * Save action\n                     */\n                    function doSave() {\n                        VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                        .done(function(response) {\n                            if (response.requestsconfirmation && !noconfirmation) {\n                                var checkboxID = 'vpl_donotshowagain';\n                                var donotshowagain = '<input type=\"checkbox\" id=\"' + checkboxID +'\"'\n                                                    + ' class=\"align-text-bottom mr-1 mt-3\">'\n                                                    + '<label for=\"' + checkboxID + '\">' + str('donotshowagain') + '</label>';\n                                var $checkbox;\n                                showMessage(response.question + '<br>' + donotshowagain, {\n                                    title: str('saving'),\n                                    icon: 'alert',\n                                    yes: function() {\n                                        if ($checkbox.length == 1 && $checkbox.prop('checked')) {\n                                            noconfirmation = true;\n                                        }\n                                        data.version = 0;\n                                        doSave();\n                                    }\n                                });\n                                $checkbox = $('#' + checkboxID);\n                            } else {\n                                fileManager.resetModified();\n                                fileManager.setVersion(response.version);\n                                menuButtons.setTimeLeft(response);\n                                VPLUtil.delay('updateMenu', updateMenu);\n                                if (VPLUI.monitorRunning()) {\n                                    data.processid = VPLUtil.getProcessId();\n                                    VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                                }\n                            }\n                        }).fail(showErrorMessage);\n                    }\n                    doSave();\n                },\n                bindKey: {\n                    win: 'Ctrl-S',\n                    mac: 'Command-S'\n                }\n            });\n\n            /**\n             * Launches the action\n             *\n             * @param {string} action Action 'run', 'debug', 'evaluate'\n             * @param {string} acting I18n for the action in progress\n             * @param {string} data Data attached to the action\n             */\n            function executionRequest(action, acting, data) {\n                if (!data) {\n                    data = {};\n                }\n                if (!lastConsole.isConnected()) {\n                    VPLUI.requestAction(action, '', data, options.ajaxurl)\n                    .done(function(response) {\n                        VPLUI.webSocketMonitor(response, action, acting, executionActions);\n                    })\n                    .fail(showErrorMessage);\n                }\n            }\n            /**\n             * Launches the run action\n             */\n            function runAction() {\n                executionRequest('run', 'running', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'run',\n                originalAction: function() {\n                    executionActions.setLastAction(runAction);\n                    runAction();\n                },\n                bindKey: {\n                    win: 'Ctrl-F11',\n                    mac: 'Command-U'\n                }\n            });\n            /**\n             * Launches the debug action\n             */\n            function debugAction() {\n                executionRequest('debug', 'debugging', {\n                    XGEOMETRY: VNCClient.getCanvasSize(),\n                    currentFileName: fileManager.getCurrentFileName(),\n                });\n            }\n            menuButtons.add({\n                name: 'debug',\n                originalAction: function() {\n                    executionActions.setLastAction(debugAction);\n                    debugAction();\n                },\n                bindKey: {\n                    win: 'Alt-F11',\n                    mac: 'Option-U'\n                }\n            });\n            /**\n             * Launches the evaluate action\n             */\n            function evaluateAction() {\n                executionRequest('evaluate', 'evaluating');\n            }\n            menuButtons.add({\n                name: 'evaluate',\n                originalAction: function() {\n                    executionActions.setLastAction(evaluateAction);\n                    evaluateAction();\n                },\n                bindKey: {\n                    win: 'Shift-F11',\n                    mac: 'Command-Option-U'\n                }\n            });\n            menuButtons.add({\n                name: 'comments',\n                originalAction: function() {\n                    dialogComments.dialog('open');\n                },\n            });\n            menuButtons.add({\n                name: 'console',\n                originalAction: function() {\n                    if (lastConsole.isOpen()) {\n                        lastConsole.close();\n                    } else {\n                        lastConsole.show();\n                    }\n                }\n            });\n            menuButtons.add({name: 'user'});\n            menuButtons.add({\n                name: 'about',\n                originalAction: function() {\n                    aboutDialog.dialog('open');\n                }\n            });\n            menuButtons.add({\n                name: 'timeleft',\n                originalAction: function() {\n                    menuButtons.toggleTimeLeft();\n                }\n            });\n            menuButtons.add({\n                name: 'more',\n                originalAction: function() {\n                    var tag = $('#vpl_ide_menuextra');\n                    if (tag.is(\":visible\")) {\n                        menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                        tag.hide();\n                    } else {\n                        menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                        tag.show();\n                    }\n                    VPLUtil.delay('updateMenu', updateMenu);\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                }\n            });\n            menuButtons.add({\n                name: 'shrightpanel',\n                icon: 'close-rightpanel',\n                originalAction: function() {\n                    if (resultContainer.vplVisible) {\n                        resultContainer.hide();\n                        resultContainer.vplVisible = false;\n                        menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n                    } else {\n                        menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                        resultContainer.show();\n                        resultContainer.vplVisible = true;\n                    }\n                    VPLUtil.delay('autoResizeTab', autoResizeTab);\n                },\n                bindKey: {\n                    win: 'Ctrl-M',\n                    mac: 'Ctrl-M'\n                }\n            });\n            var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n            tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n            var rightPanelButton = $('#vpl_ide_shrightpanel');\n            menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n            rightPanelButton.button();\n            rightPanelButton.css('padding', '0');\n            $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n            rightPanelButton.on('click', function() {\n                menuButtons.launchAction('shrightpanel');\n            });\n            rightPanelButton.hide();\n            menu.addClass(\"ui-widget-header ui-corner-all\");\n            var menuHtml = \"\";\n            menuHtml += menuButtons.getHTML('more');\n            menuHtml += menuButtons.getHTML('save');\n            menuHtml += \"<span id='vpl_ide_mexecution'>\";\n            menuHtml += menuButtons.getHTML('run');\n            menuHtml += menuButtons.getHTML('debug');\n            menuHtml += menuButtons.getHTML('evaluate');\n            menuHtml += menuButtons.getHTML('comments');\n            menuHtml += menuButtons.getHTML('console');\n            menuHtml += \"</span> \";\n            menuHtml += \"<span id='vpl_ide_menuextra'>\";\n            menuHtml += \"<span id='vpl_ide_file'>\";\n            // TODO autosave not implemented.\n            menuHtml += menuButtons.getHTML('filelist');\n            menuHtml += menuButtons.getHTML('new');\n            menuHtml += menuButtons.getHTML('rename');\n            menuHtml += menuButtons.getHTML('delete');\n            menuHtml += menuButtons.getHTML('import');\n            menuHtml += menuButtons.getHTML('download');\n            menuHtml += menuButtons.getHTML('resetfiles');\n            menuHtml += menuButtons.getHTML('sort');\n            menuHtml += menuButtons.getHTML('multidelete');\n            menuHtml += menuButtons.getHTML('showparentfiles');\n            menuHtml += menuButtons.getHTML('fontsize');\n            menuHtml += menuButtons.getHTML('theme');\n            menuHtml += \"</span> \";\n            // TODO print still not implemented.\n            menuHtml += \"<span id='vpl_ide_edit'>\";\n            menuHtml += menuButtons.getHTML('undo');\n            menuHtml += menuButtons.getHTML('redo');\n            menuHtml += menuButtons.getHTML('select_all');\n            menuHtml += menuButtons.getHTML('find');\n            menuHtml += menuButtons.getHTML('find_replace');\n            menuHtml += menuButtons.getHTML('next');\n            menuHtml += \"</span> \";\n            menuHtml += \"</span> \";\n            menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n            menuHtml += menuButtons.getHTML('about') + ' ';\n            menuHtml += menuButtons.getHTML('user') + ' ';\n            menuHtml += menuButtons.getHTML('timeleft');\n            menuHtml += '<div class=\"clearfix\"></div>';\n            menu.append(menuHtml);\n            $('#vpl_ide_more').button();\n            $('#vpl_ide_save').button();\n            $('#vpl_ide_menuextra').hide();\n            $('#vpl_ide_file').controlgroup();\n            $('#vpl_ide_edit').controlgroup();\n            $('#vpl_ide_mexecution').controlgroup();\n            $('#vpl_ide_fullscreen').button();\n            $('#vpl_ide_acetheme').button();\n            $('#vpl_ide_about').button();\n            $('#vpl_ide_user').button().css('float', 'right').hide();\n            $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n            $('#vpl_menu .ui-button').css('padding', '6px');\n            $('#vpl_menu .ui-button-text').css('padding', '0');\n            var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                                'download', 'comments', 'console', 'import',\n                                'fontsize', 'timeleft'];\n            for (var i = 0; i < alwaysActive.length; i++) {\n                menuButtons.enable(alwaysActive[i], true);\n            }\n            menuButtons.setExtracontent('user', options.username);\n            menuButtons.setTimeLeft(options);\n            updateMenu = function() {\n                var i;\n                var file = fileManager.currentFile();\n                var nfiles = fileManager.length();\n                if (nfiles) {\n                    tabs.show();\n                } else {\n                    tabs.hide();\n                }\n                if (fileManager.isFileListVisible()) {\n                    menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n                } else {\n                    menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n                }\n                var modified = fileManager.isModified();\n                menuButtons.enable('save', modified);\n                var running = VPLUI.monitorRunning();\n                if (running) {\n                    menuButtons.setText('run', 'running');\n                } else {\n                    menuButtons.setText('run', 'run');\n                }\n                menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n                menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n                menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n                menuButtons.enable('download', !modified);\n                menuButtons.enable('new', nfiles < maxNumberOfFiles);\n                menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n                menuButtons.enable('showparentfiles', !modified);\n                menuButtons.enable('theme', true);\n                var sel;\n                if (!file || nfiles === 0) {\n                    sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n                    for (i = 0; i < sel.length; i++) {\n                        menuButtons.enable(sel[i], false);\n                    }\n                    return;\n                }\n                menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n                menuButtons.enable('undo', file.hasUndo());\n                menuButtons.enable('redo', file.hasRedo());\n                menuButtons.enable('select_all', file.hasSelectAll());\n                menuButtons.enable('find', file.hasFind());\n                menuButtons.enable('find_replace', file.hasFindReplace());\n                menuButtons.enable('next', file.hasNext());\n                VPLUtil.delay('updateFileList', fileManager.updateFileList);\n            };\n\n            executionActions = {\n                'open': updateMenu,\n                'close': updateMenu,\n                'getConsole': function() {\n                    return lastConsole;\n                },\n                'setResult': self.setResult,\n                'ajaxurl': options.ajaxurl,\n                'run': function(content, coninfo, ws) {\n                    var parsed = /^([^:]*):?(.*)/.exec(content);\n                    var type = VPLUtil.sanitizeText(parsed[1]);\n                    if (type == 'terminal' || type == 'webterminal') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = terminal;\n                        terminal.connect(coninfo.executionURL, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n                        if (type == 'webterminal') {\n                            var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                            URLfavicon += \"/favicon.ico\";\n                            var imgFavicon = $('<img>');\n                            imgFavicon.attr('src', URLfavicon);\n                            imgFavicon.attr('style', 'display:none');\n                            $('body').append(imgFavicon);\n                        }\n                    } else if (type == 'vnc') {\n                        if (lastConsole && lastConsole.isOpen()) {\n                            lastConsole.close();\n                        }\n                        lastConsole = VNCClient;\n                        VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                                coninfo.executionPath, function() {\n                                    ws.close();\n                                    focusCurrentFile();\n                                });\n                    } else if (type == \"browser\") {\n                        var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                        URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\n                        if (isTeacher) {\n                            URL += \"?private\";\n                        }\n                        var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                        message += VPLUtil.str('open') + '</a>';\n                        var options = {\n                            width: 200,\n                            icon: 'run',\n                            title: VPLUtil.str('run'),\n                        };\n                        showMessage(message, options);\n                    } else {\n                        VPLUtil.log(\"Type of run error \" + content, true);\n                    }\n                },\n                'lastAction': false,\n                'getLastAction': function() {\n                    var ret = this.lastAction;\n                    this.lastAction = false;\n                    return ret;\n                },\n                'setLastAction': function(action) {\n                    this.lastAction = action;\n                }\n            };\n\n            tabs.on(\"tabsactivate\", function() {\n                fileManager.currentFile('focus');\n                VPLUtil.delay('updateMenu', updateMenu);\n                VPLUtil.delay('autoResizeTab', autoResizeTab);\n            });\n\n            // VPLIDE resize view control.\n            var jw = $(window);\n            jw.on('resize', autoResizeTab);\n            // Save? before exit.\n            if (!options.example) {\n                jw.on('beforeunload', function() {\n                    if (fileManager.isModified()) {\n                        return str('changesNotSaved');\n                    }\n                    return undefined;\n                });\n            }\n            fileManager = new FileManager();\n\n            autoResizeTab();\n            // Checks menu width every 1 sec as it can change without event.\n            (function() {\n                var oldMenuWidth = menu.width();\n                /**\n                 * Checks menu width change\n                 */\n                function checkMenuWidth() {\n                    var newMenuWidth = menu.width();\n                    if (oldMenuWidth != newMenuWidth) {\n                        oldMenuWidth = newMenuWidth;\n                        autoResizeTab();\n                    }\n                }\n                checkMenuWidth();\n                setInterval(checkMenuWidth, 1000);\n            }());\n            fileManager.resetModified();\n            VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n            .done(function(response) {\n                var allOK = true;\n                var files = response.files;\n                var showFileList = false;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                    if (r) {\n                        r.resetModified();\n                        if (i < minNumberOfFiles || files.length <= 5) {\n                            fileManager.open(r);\n                        } else {\n                            showFileList = true;\n                        }\n                    } else {\n                        allOK = false;\n                    }\n                }\n                tabs.tabs('option', 'active', 0);\n\n                if (response.compilationexecution) {\n                    self.setResult(response.compilationexecution, false);\n                }\n                menuButtons.setTimeLeft(response);\n                if (response.comments > '') {\n                    $('#vpl_ide_input_comments').val(response.comments);\n                }\n                if (allOK) {\n                    fileManager.resetModified();\n                } else {\n                    fileManager.setModified();\n                }\n                if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n                    menuButtons.getAction('new')();\n                } else if (!options.saved) {\n                    fileManager.setModified();\n                }\n                fileManager.setFontSize(options.fontSize);\n                fileManager.setVersion(response.version);\n                fileManager.fileListVisible(showFileList);\n                VPLUtil.afterAll('AfterLoadFiles', function() {\n                    updateMenu();\n                    autoResizeTab();\n                    adjustTabsTitles(true);\n                });\n            })\n            .fail(showErrorMessage);\n        };\n        window.VPLIDE = VPLIDE;\n        return {\n            init: function(rootId, options) {\n                vplIdeInstance = new VPLIDE(rootId, options);\n            }\n        };\n    }\n);\n"],"names":["define","$","jqui","VPLUtil","VPLUI","VPLFile","VPLIDEButtons","VPLTerminal","VPLVNCClient","VPLIDE","vplIdeInstance","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","str","rootObj","append","Error","activateModification","optionsToCheck","new","rename","delete","save","run","edit","debug","evaluate","import","resetfiles","sort","multidelete","showparentfiles","acetheme","console","comments","loadajaxurl","ajaxurl","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","droppedFiles","listDroppedFiles","entry","path","arguments","length","undefined","Promise","resolve","isFile","file","fullName","name","Object","defineProperty","get","push","isDirectory","createReader","readEntries","entries","dirPromises","i","all","then","dt","promises","items","webkitGetAsEntry","files","readSelectedFiles","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","fontSize","parseInt","on","menu","menuButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","contentclass","contentTag","HTMLcontent","contents","html","setResult","go","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","window","VPLDescription","MathJax","math","Hub","Queue","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","list","sortable","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","setUserPreferences","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","aceTheme","modal","getTheme","VNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","openpopup","url","showparentfilesurl","Math","screen","availWidth","availHeight","print","editorName","setText","scrollTop","username","setTimeout","location","download","noconfirmation","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","getFilesToSave","version","getVersion","JSON","stringify","postMaxSize","doSave","requestsconfirmation","$checkbox","donotshowagain","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","getConsole","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","log","lastAction","getLastAction","ret","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll","init"],"mappings":"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"}