{"version":3,"file":"vplide.min.js","sources":["../src/vplide.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * IDE Control\n *\n * @copyright 2017 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals openpopup */\n\nimport $ from 'jquery';\n/* eslint-disable no-unused-vars */\nimport jqui from 'jqueryui';\n/* eslint-enable no-unused-vars */\nimport coreURL from 'core/url';\nimport {VPLUtil} from 'mod_vpl/vplutil';\nimport {VPLUI} from 'mod_vpl/vplui';\nimport {VPLFile} from 'mod_vpl/vplidefile';\nimport {VPLIDEButtons} from 'mod_vpl/vplidebutton';\nimport {VPLTerminal} from 'mod_vpl/vplterminal';\nimport {VPLVNCClient} from 'mod_vpl/vplvnc';\n\nvar vplIdeInstance;\nvar VPLIDE = function(rootId, options) {\n    var self = this;\n    var fileManager;\n    var adjustTabsTitles;\n    var autoResizeTab;\n    var showErrorMessage;\n    var updateMenu;\n    var executionActions;\n    var minNumberOfFiles = options.minfiles || 0;\n    var maxNumberOfFiles = options.maxfiles || 0;\n    var restrictedEdit = options.restrictededitor || options.example;\n    var readOnly = options.example;\n    var readOnlyFiles = options.readOnlyFiles;\n    var isTeacher = options.isTeacher;\n    var fullScreen = false;\n    var scrollBarWidth = VPLUI.scrollBarWidth();\n    var str = VPLUtil.str;\n    var rootObj = $('#' + rootId);\n    $(\"head\").append('<meta name=\"viewport\" content=\"initial-scale=1\">')\n                    .append('<meta name=\"viewport\" width=\"device-width\">')\n                    .append('<link rel=\"stylesheet\" href=\"' + coreURL.relativeUrl('/mod/vpl/editor/VPLIDE.css') + '\"/>');\n    if (typeof rootObj != 'object') {\n        throw new Error(\"VPL: constructor tag_id not found\");\n    }\n    var optionsToCheck = {\n        'new': true,\n        'rename': true,\n        'delete': true,\n        'save': true,\n        'run': true,\n        'edit': true,\n        'debug': true,\n        'evaluate': true,\n        'import': true,\n        'resetfiles': true,\n        'sort': true,\n        'multidelete': true,\n        'showparentfiles': true,\n        'acetheme': true,\n        'console': true,\n        'comments': true\n    };\n    if ((typeof options.loadajaxurl) == 'undefined') {\n        options.loadajaxurl = options.ajaxurl;\n    }\n    (function() {\n        var activateModification = (minNumberOfFiles < maxNumberOfFiles);\n        options.new = activateModification;\n        options.rename = activateModification;\n        options.delete = activateModification;\n        options.comments = options.comments && !options.example;\n        options.acetheme = true;\n    })();\n    options.sort = (maxNumberOfFiles - minNumberOfFiles >= 2);\n    options.multidelete = options.sort;\n    options.import = !restrictedEdit;\n    var isOptionAllowed = function(op) {\n        if (!optionsToCheck[op]) {\n            return true;\n        }\n        return options[op];\n    };\n    options.console = isOptionAllowed('run') || isOptionAllowed('debug');\n    if ((typeof options.fontSize) == 'undefined') {\n        options.fontSize = 12;\n    }\n    options.fontSize = parseInt(options.fontSize);\n    /**\n     * Handler for dragover event.\n     * @param {object} e event.\n     */\n    function dragoverHandler(e) {\n        if (restrictedEdit) {\n            e.originalEvent.dataTransfer.dropEffect = 'none';\n        } else {\n            e.originalEvent.dataTransfer.dropEffect = 'copy';\n        }\n        e.preventDefault();\n    }\n    /**\n     * Handler for drop event.\n     * @param {object} e event.\n     * @returns {boolean}\n     */\n    function dropHandler(e) {\n        if (restrictedEdit) { // No drop allowed.\n            e.stopImmediatePropagation();\n            return false;\n        }\n        var droppedFiles = [];\n        // Function that lists all files and subfiles of given entry into droppedFiles.\n        var listDroppedFiles = function(entry, path = '') {\n            return new Promise(function(resolve) {\n                if (entry.isFile) {\n                    // Current entry is a file : add it to the list.\n                    entry.file(function(file) {\n                        // Change its name s.t. it preserves directories structure.\n                        var fullName = path + file.name;\n                        Object.defineProperty(file, \"name\", {\n                            get: function() {\n                                    return fullName;\n                                    }\n                        });\n                        droppedFiles.push(file);\n                        resolve();\n                    });\n                } else if (entry.isDirectory) {\n                    // Current entry is a directory : process its content.\n                    var dirReader = entry.createReader();\n                    dirReader.readEntries(function(entries) {\n                        var dirPromises = [];\n                        for (var i = 0; i < entries.length; i++) {\n                            dirPromises.push(listDroppedFiles(entries[i], path + entry.name + \"/\"));\n                        }\n                        Promise.all(dirPromises).then(resolve).catch(function(err) {\n                            VPLUtil.log(\"Error reading directory entries: \" + err);\n                        });\n                    });\n                } else {\n                    // This is neither a directory nor a file : ignore it.\n                    resolve();\n                }\n            });\n        };\n        var dt = e.originalEvent.dataTransfer;\n\n        // List every element of the drop event.\n        var promises = [];\n        for (var i = 0; i < dt.items.length; i++) {\n            var entry = dt.items[i].webkitGetAsEntry();\n            if (!entry) { // Used if testing with Behat\n                const file = dt.items[i].getAsFile();\n                if (file) {\n                    // Create a fake entry to handle it like a file.\n                    entry = {\n                        isFile: true,\n                        isDirectory: false,\n                        file: function(callback) {\n                            callback(file);\n                        }\n                    };\n                    promises.push(listDroppedFiles(entry));\n                }\n            } else if (entry.isFile || entry.isDirectory) {\n                promises.push(listDroppedFiles(entry));\n            }\n        }\n\n        // Drop files.\n        if (dt.files.length > 0) {\n            Promise.all(promises)\n            .then(function() {\n                VPLUI.readSelectedFiles(droppedFiles, function(file) {\n                    return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n                },\n                function() {\n                    fileManager.fileListVisibleIfNeeded();\n                });\n                return;\n            })\n            .catch(function(err) {\n                VPLUtil.log(\"Error processing dropped files: \" + err);\n            });\n\n            e.stopImmediatePropagation();\n            return false;\n        }\n        return false;\n    }\n    rootObj.on('drop', dropHandler);\n    rootObj.on('dragover', dragoverHandler);\n    /**\n     * Handler for paste limited by restrictedEdit var.\n     * @param {object} e event.\n     * @returns {boolean}\n     */\n    function restrictedPaste(e) {\n        if (restrictedEdit) {\n            e.stopPropagation();\n            return false;\n        }\n        return true;\n    }\n    // Init editor vars.\n    var menu = $('#vpl_menu');\n    var menuButtons = new VPLIDEButtons(menu, isOptionAllowed);\n    var tr = $('#vpl_tr');\n    var fileListContainer = $('#vpl_filelist');\n    var fileList = $('#vpl_filelist_header');\n    var fileListContent = $('#vpl_filelist_content');\n    var tabsUl = $('#vpl_tabs_ul');\n    var tabs = $('#vpl_tabs');\n    var resultContainer = $('#vpl_results');\n    var result = $('#vpl_results_accordion');\n    var renameDiretoryAction = VPLUtil.doNothing;\n    fileListContainer.vplMinWidth = 80;\n    resultContainer.vplMinWidth = 100;\n    /**\n     * Avoids selecting grade.\n     * @param {object} event Unuse.\n     * @param {object} ui UI origen.\n     * @returns {boolean}\n     */\n    function avoidSelectGrade(event, ui) {\n        if (\"newHeader\" in ui) {\n            if (ui.newHeader.hasClass('vpl_ide_accordion_t_grade')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Constructor of FileManager objects\n     */\n    function FileManager() {\n        var tabsUl = $('#vpl_tabs_ul');\n        $('#vpl_tabs').tabs();\n        var tabs = $('#vpl_tabs').tabs(\"widget\");\n        var files = [];\n        var openFiles = [];\n        var modified = true;\n        var self = this;\n        (function() {\n            var version;\n            self.setVersion = function(v) {\n                version = v;\n            };\n            self.getVersion = function() {\n                return version;\n            };\n        })();\n        this.updateFileList = function() {\n            self.generateFileList();\n        };\n        this.fileNameExists = function(name) {\n            var checkName = name.toLowerCase();\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].getFileName().toLowerCase() == checkName) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        /**\n         * Checks if name is included in current files names\n         * @param {string} name Name of file\n         * @returns {boolean} if found or not found\n         */\n        function fileNameIncluded(name) {\n            var checkName = name.toLowerCase() + '/';\n            for (var i = 0; i < files.length; i++) {\n                var nameMod = files[i].getFileName().toLowerCase() + '/';\n                // Check for name as directory existent.\n                if (nameMod.indexOf(checkName) === 0 || checkName.indexOf(nameMod) === 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        /**\n         * Checks if changing file name results in two blovkly files\n         * @param {string} oldname The old file name\n         * @param {string} newname The new file name\n         * @returns {boolean} if results two two blovkly files\n         */\n        function twoBlockly(oldname, newname) {\n            if (VPLUtil.isBlockly(oldname)) {\n                return false;\n            }\n            if (VPLUtil.isBlockly(newname)) {\n                for (var i = 0; i < files.length; i++) {\n                    if (VPLUtil.isBlockly(files[i].getFileName())) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        this.restrictedPaste = restrictedPaste;\n        this.dropHandler = dropHandler;\n        this.dragoverHandler = dragoverHandler;\n        this.readOnly = readOnly;\n        this.readOnlyFiles = readOnlyFiles;\n        this.restrictedEdit = restrictedEdit;\n        this.adjustTabsTitles = adjustTabsTitles;\n        this.minNumberOfFiles = minNumberOfFiles;\n        this.scrollBarWidth = scrollBarWidth;\n        var localClipboard = \"\";\n        this.setClipboard = function(t) {\n            localClipboard = t;\n        };\n        this.getClipboard = function() {\n            return localClipboard;\n        };\n        this.getTabPos = function(fileId) {\n            for (var i = 0; i < openFiles.length; i++) {\n                if (openFiles[i].getId() == fileId) {\n                    return i;\n                }\n            }\n            return openFiles.length;\n        };\n        this.getTheme = function() {\n            return options.theme;\n        };\n        this.setTheme = function(theme) {\n            options.theme = theme;\n            for (var i = 0; i < files.length; i++) {\n                files[i].setTheme(theme);\n            }\n        };\n        this.addTab = function(fid) {\n            var hlink = '<a href=\"#vpl_file' + fid + '\"></a>';\n            tabsUl.append('<li id=\"vpl_tab_name' + fid + '\">' + hlink + '</li>');\n            tabs.append('<div id=\"vpl_file' + fid + '\" class=\"vpl_ide_file\"></div>');\n        };\n        this.removeTab = function(fid) {\n            tabsUl.find('#vpl_tab_name' + fid).remove();\n            tabs.find('#vpl_file' + fid).remove();\n        };\n        this.isReadOnly = function(fileName) {\n            return this.readOnly || this.readOnlyFiles.indexOf(fileName) != -1;\n        };\n        this.open = function(pos) {\n            var file;\n            if (typeof pos == 'object') {\n                file = pos;\n            } else {\n                file = files[pos];\n            }\n            if (file.isOpen()) {\n                return;\n            }\n            var fid = file.getId();\n            self.addTab(fid);\n            openFiles.push(file);\n            menuButtons.setGetkeys(file.open());\n            tabs.tabs('refresh');\n            adjustTabsTitles(false);\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            VPLUtil.delay('updateMenu', updateMenu);\n        };\n        this.closeFile = function(file) {\n            if (!file.isOpen()) {\n                return;\n            }\n            var pos;\n            var fid = file.getId();\n            file.close();\n            VPLUI.hideIDEStatus();\n            self.removeTab(fid);\n            var ptab = self.getTabPos(fid);\n            openFiles.splice(ptab, 1);\n            tabs.tabs('refresh');\n            adjustTabsTitles(false);\n            self.fileListVisible(true);\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            VPLUtil.delay('adjustTabsTitles', adjustTabsTitles, false);\n            if (openFiles.length == ptab) {\n                ptab--;\n            }\n            if (ptab >= 0 && openFiles.length > ptab) {\n                pos = self.getFilePosById(openFiles[ptab].getId());\n                self.gotoFile(pos, 'c');\n                return;\n            }\n        };\n        this.isClosed = function(pos) {\n            return !files[pos].isOpen();\n        };\n        this.fileListVisible = function(b) {\n            if (b === fileListContainer.vplVisible) {\n                return;\n            }\n            if (b) {\n                VPLUtil.delay('fileListVisible', function() {\n                    fileListContainer.vplVisible = true;\n                    self.updateFileList();\n                    fileListContainer.show();\n                    autoResizeTab();\n                    });\n            } else {\n                VPLUtil.delay('fileListVisible', function() {\n                    fileListContainer.vplVisible = false;\n                    fileListContainer.hide();\n                    autoResizeTab();\n                    });\n            }\n        };\n        this.isFileListVisible = function() {\n            return fileListContainer.vplVisible;\n        };\n        this.fileListVisibleIfNeeded = function() {\n            if (this.isFileListVisible()) {\n                return;\n            }\n            for (var i = 0; i < files.length; i++) {\n                if (!files[i].isOpen()) {\n                    this.fileListVisible(true);\n                    return;\n                }\n            }\n        };\n        this.setFontSize = function(size) {\n            options.fontSize = size;\n            for (var i = 0; i < files.length; i++) {\n                files[i].setFontSize(size);\n            }\n            terminal.setFontSize(size);\n        };\n        this.getFontSize = function() {\n            return options.fontSize;\n        };\n        this.addFile = function(file, replace, ok, showError) {\n            if ((typeof file.name != 'string') || !VPLUtil.validPath(file.name)) {\n                showError(str('incorrect_file_name') + '\\n(' + file.name + ')');\n                return false;\n            }\n            if (replace !== true) {\n                replace = false;\n            }\n            var pos = this.fileNameExists(file.name);\n            if (pos != -1) {\n                if (replace && !files[pos].isReadOnly()) {\n                    files[pos].setContent(file.contents);\n                    self.setModified();\n                    ok();\n                    VPLUtil.delay('updateFileList', self.updateFileList);\n                    return file;\n                } else {\n                    showError(str('filenotadded', file.name));\n                    return false;\n                }\n            }\n            if (fileNameIncluded(file.name) || twoBlockly('', file.name)) {\n                showError(str('filenotadded', file.name));\n                return false;\n            }\n            if (files.length >= maxNumberOfFiles) {\n                showError(str('maxfilesexceeded') + '\\n(' + maxNumberOfFiles + ')');\n                return false;\n            }\n            var fid = VPLUtil.getUniqueId();\n            var newfile = new VPLFile(fid, file.name, file.contents, this, vplIdeInstance);\n            if (file.encoding == 1) {\n                newfile.extendToBinary();\n            } else {\n                if (VPLUtil.isBlockly(file.name)) {\n                    newfile.extendToBlockly();\n                } else {\n                    newfile.extendToCodeEditor();\n                }\n            }\n            newfile.setFileName(file.name);\n            files.push(newfile);\n            self.setModified();\n            if (files.length > 5) {\n                self.fileListVisible(true);\n            }\n            ok();\n            return newfile;\n        };\n        this.renameFile = function(oldname, newname, showError) {\n            var pos = this.fileNameExists(oldname);\n            try {\n                if (pos == -1) {\n                    throw new Error(\"Internal error: File name not found\");\n                }\n                if (files[pos].getId() < this.minNumberOfFiles) {\n                    throw new Error(\"Internal error: Renaming requested filename\");\n                }\n                if (files[pos].getFileName() == newname) {\n                    return true; // Equals name file.\n                }\n                if (!VPLUtil.validPath(newname) ||\n                        fileNameIncluded(newname) ||\n                        twoBlockly(oldname, newname)) {\n                    throw str('incorrect_file_name');\n                }\n                if (VPLUtil.isBinary(oldname) && VPLUtil.fileExtension(oldname) != VPLUtil.fileExtension(newname)) {\n                    throw str('incorrect_file_name');\n                }\n                if (VPLUtil.isBlockly(oldname) != VPLUtil.isBlockly(newname)) {\n                    if (files[pos].getContent() > '') {\n                        showMessage(str('delete_file_fq', oldname), {\n                            ok: function() {\n                                var file = {\n                                    name: newname,\n                                    contents: '',\n                                    encoding: 0\n                                };\n                                fileManager.deleteFile(oldname, showError);\n                                var fileResult = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n                                if (fileResult) {\n                                    fileManager.gotoFileName(newname);\n                                }\n                            }\n                        });\n                    } else {\n                        var file = {\n                            name: newname,\n                            contents: '',\n                            encoding: 0\n                        };\n                        fileManager.deleteFile(oldname, showError);\n                        var fileResult = fileManager.addFile(file, false, updateMenu, showError);\n                        if (fileResult) {\n                            fileManager.gotoFileName(newname);\n                        }\n                    }\n                    return true;\n                }\n                files[pos].setFileName(newname);\n            } catch (e) {\n                showError(str('filenotrenamed', oldname) + '\\n' + e);\n                return false;\n            }\n            self.setModified();\n            adjustTabsTitles(false);\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            return true;\n        };\n        this.directoryExists = function(dirName) {\n            var checkName = dirName.toLowerCase() + '/';\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].getFileName().toLowerCase().startsWith(checkName)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.renameDirectory = function(oldName, newName, showError) {\n            if (oldName == newName) {\n                return false;\n            }\n            try {\n                if (!this.directoryExists(oldName)) {\n                    throw new Error(\"Trying to rename a directory that doesn't exist: \" + oldName);\n                }\n                if (!VPLUtil.validPath(newName + '/file.txt')) {\n                    throw str('incorrect_directory_name');\n                }\n                // Prepare new names\n                var oldNameLength = oldName.length + 1;\n                var checkDirName = oldName.toLowerCase() + '/';\n                var newFileNames = [];\n                var i;\n                for (i = 0; i < files.length; i++) {\n                    var fileName = files[i].getFileName();\n                    if (fileName.toLowerCase().startsWith(checkDirName)) {\n                        if (files[i].getId() < this.minNumberOfFiles) { // Renaming required filename\n                            throw str('incorrect_file_name');\n                        }\n                        newFileNames[i] = newName + '/' + fileName.substr(oldNameLength);\n                    }\n                }\n                if (this.directoryExists(newName)) { // Checks if the merge is possible (no repeated names)\n                    var oldNames = [];\n                    for (i = 0; i < files.length; i++) {\n                        oldNames[files[i].getFileName().toLowerCase()] = true;\n                    }\n                    for (i = 0; i < files.length; i++) {\n                        if (newFileNames[i] && oldNames[newFileNames[i].toLowerCase()]) {\n                            throw str('incorrect_file_name');\n                        }\n                    }\n                }\n                // Set the new file names\n                for (i = 0; i < newFileNames.length; i++) {\n                    if (newFileNames[i]) {\n                        files[i].setFileName(newFileNames[i]);\n                    }\n                }\n            } catch (e) {\n                showError(str('directory_not_renamed', oldName) + '\\n' + e);\n                return false;\n            }\n            self.setModified();\n            adjustTabsTitles(false);\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            return true;\n        };\n        this.deleteFile = function(name, showError) {\n            var pos = this.fileNameExists(name);\n            if (pos == -1) {\n                showError(str('filenotdeleted', name));\n                return false;\n            }\n            if (files[pos].getId() < minNumberOfFiles) {\n                showError(str('filenotdeleted', name));\n                return false;\n            }\n            this.setModified();\n            this.closeFile(files[pos]);\n            files.splice(pos, 1);\n            if (openFiles.length == 0) {\n                VPLUI.hideIDEStatus();\n            }\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            return true;\n        };\n        this.currentFile = function() {\n            var id = tabs.tabs('option', 'active');\n            if (id in openFiles) {\n                var file = openFiles[id];\n                if (arguments.length === 0) {\n                    return file;\n                }\n                var action = arguments[0];\n                if (typeof file[action] === 'function') {\n                    var fun = file[action];\n                    var args = Array.prototype.slice(arguments);\n                    args.shift();\n                    return fun.apply(file, args);\n                }\n            }\n            return false;\n        };\n        this.getCurrentFileName = function() {\n            var currentFileName = '';\n            var currentFile = fileManager.currentFile();\n            if (currentFile) {\n                currentFileName = currentFile.name;\n            }\n            return currentFileName;\n        };\n        this.currentPos = function() {\n            return tabs.tabs('option', 'active');\n        };\n        this.getFileTab = function(id) {\n            for (var i = 0; i < openFiles.length; i++) {\n                if (openFiles[i].getId() == id) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        this.getFilePosById = function(id) {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].getId() == id) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n        this.gotoFile = function(pos, l) {\n            var file = files[pos];\n            self.open(file);\n            tabs.tabs('option', 'active', self.getFileTab(file.getId()));\n            if (l !== 'c') {\n                file.gotoLine(parseInt(l, 10));\n            }\n            file.focus();\n        };\n        this.gotoFileLink = function(a) {\n            var tag = $(a);\n            var fname = tag.data('file');\n            var fpos = -1;\n            if (fname > '') {\n                fpos = this.fileNameExists(fname);\n            } else {\n                fpos = self.getFilePosById(tag.data('fileid'));\n            }\n            if (fpos >= 0) {\n                var line = tag.data('line');\n                if (typeof line == 'undefined') {\n                    line = 'c';\n                }\n                self.gotoFile(fpos, line);\n                return true;\n            }\n            return false;\n        };\n        this.gotoFileName = function(fname, line) {\n            var fpos = this.fileNameExists(fname);\n            if (fpos >= 0) {\n                if (typeof line == 'undefined') {\n                    line = 'c';\n                }\n                self.gotoFile(fpos, line);\n                return true;\n            }\n            return false;\n        };\n        this.getFilesToSave = function() {\n            var ret = [];\n            for (var i = 0; i < files.length; i++) {\n                var file = {};\n                file.name = files[i].getFileName();\n                file.contents = files[i].getContent();\n                file.encoding = files[i].isBinary() ? 1 : 0;\n                ret.push(file);\n            }\n            return ret;\n        };\n        this.resetModified = function() {\n            modified = false;\n            for (var i = 0; i < files.length; i++) {\n                files[i].resetModified();\n            }\n            VPLUtil.delay('updateMenu', updateMenu);\n            VPLUtil.delay('updateFileList', self.updateFileList);\n        };\n        this.setModified = function() {\n            modified = true;\n            VPLUtil.delay('updateFileList', self.updateFileList);\n            VPLUtil.delay('updateMenu', updateMenu);\n        };\n        this.isModified = function() {\n            return modified;\n        };\n        this.length = function() {\n            return files.length;\n        };\n        this.clearAnnotations = function() {\n            for (var i = 0; i < files.length; i++) {\n                files[i].clearAnnotations();\n            }\n        };\n        this.getFile = function(i) {\n            return files[i];\n        };\n        this.getFiles = function() {\n            return files;\n        };\n        this.getDirectoryStructure = function() {\n            var structure = {\n                isDir: true,\n                content: {},\n                path: '',\n            };\n            /**\n             * Adds a new file the structure of directories\n             * @param {int} i Index of file to add in the file array\n             */\n            function addFilePath(i) {\n                var file = files[i];\n                var fileName = file.getFileName();\n                var path = fileName.split(\"/\");\n                var curdir = structure;\n                var pathdir = '';\n                for (var p = 0; p < path.length; p++) {\n                    var part = path[p];\n                    if (p == path.length - 1) { // File.\n                        curdir.content[part] = {\n                            isDir: false,\n                            content: file,\n                            pos: i,\n                        };\n                    } else {\n                        pathdir += part;\n                        if (!curdir.content[part]) { // New dir.\n                            curdir.content[part] = {\n                                isDir: true,\n                                content: {},\n                                path: pathdir,\n                            };\n                        }\n                        // Descend Dir.\n                        pathdir += '/';\n                        curdir = curdir.content[part];\n                    }\n                }\n            }\n            for (var i in files) {\n                if (files.hasOwnProperty(i)) {\n                    addFilePath(i);\n                }\n            }\n            return structure;\n        };\n        this.generateFileList = function() {\n            if (!self.isFileListVisible()) {\n                return;\n            }\n            var dirIndent = '<span class=\"vpl_ide_dirindent\"></span>';\n            /**\n             * Generates an array of string with the HTML code to represent the list of IDE files\n             * @param {Object} dir Current directory\n             * @param {int} indent Html code to indent subdirectories\n             * @param {Array} lines Output. Each line contains the HTML to represent an IDE file\n             */\n            function lister(dir, indent, lines) {\n                var name, fd, sname, attrs, dirline, file, path, line;\n                for (name in dir.content) {\n                    if (dir.content.hasOwnProperty(name)) {\n                        fd = dir.content[name];\n                        if (fd.isDir) {\n                            var dirpath = VPLUtil.sanitizeText(fd.path);\n                            attrs = 'href=\"#\" data-dirname=\"' + dirpath + '\" ';\n                            sname = VPLUtil.sanitizeText(name);\n                            dirline = indent;\n                            dirline += VPLUI.iconFolder() + '<a ' + attrs + '>' + sname + '</a>';\n                            lines.push(dirline);\n                            lister(fd, indent + dirIndent, lines);\n                        } else {\n                            file = fd.content;\n                            sname = VPLUtil.sanitizeText(name);\n                            path = VPLUtil.sanitizeText(file.getFileName());\n                            if (file.isOpen()) {\n                                sname = '<b>' + sname + '</b>';\n                            }\n                            attrs = 'href=\"#\" data-fileid=\"' + file.getId() + '\" title=\"' + path + '\"';\n                            line = '<a ' + attrs + '>' + sname + '</a>';\n                            if (file.isModified()) {\n                                line = VPLUI.iconModified() + line;\n                            }\n                            if (file.isReadOnly()) {\n                                line = line + VPLUI.iconReadOnly();\n                            } else if (file.getId() < minNumberOfFiles) {\n                                line = line + VPLUI.iconRequired();\n                            }\n                            lines.push(indent + line);\n                        }\n                    }\n                }\n            }\n\n            var structure = self.getDirectoryStructure();\n            var lines = [];\n            var html = '';\n            lister(structure, '', lines);\n            for (var i = 0; i < lines.length; i++) {\n                html += lines[i] + '<br>';\n            }\n            fileListContent.html('<div>' + html + '</div>');\n        };\n        tabsUl.on('click', 'span.vpl_ide_closeicon', function() {\n            fileManager.closeFile(fileManager.currentFile());\n        });\n        tabsUl.on('dblclick', 'span.vpl_ide_closeicon', menuButtons.getAction('delete'));\n        tabsUl.on('dblclick', 'a', menuButtons.getAction('rename'));\n        fileListContent.on('dblclick', 'a[data-fileid]', menuButtons.getAction('rename'));\n        fileListContent.on('dblclick', 'a[data-dirname]', renameDiretoryAction);\n    }\n    this.updateEvaluationNumber = function(res) {\n        if (typeof res.nevaluations != 'undefined') {\n            var text = res.nevaluations;\n            if (typeof res.reductionbyevaluation != 'undefined'\n                    && res.reductionbyevaluation > ''\n                    && res.reductionbyevaluation != 0) {\n                if (res.freeevaluations != 0) {\n                    text = text + '/' + res.freeevaluations;\n                }\n                text = text + ' -' + res.reductionbyevaluation;\n            }\n            menuButtons.setExtracontent('evaluate', text);\n        }\n    };\n    this.lastResult = null;\n    this.getTerminal = function() {\n        return terminal;\n    };\n    this.setResultGrade = function(content, raw) {\n        var name = 'grade';\n        var titleclass = 'vpl_ide_accordion_t_' + name;\n        var contentclass = 'vpl_ide_accordion_c_' + name;\n        if (result.find('.' + contentclass).length == 0) {\n            result.append('<div class=\"' + titleclass + '\"></div>');\n            result.append('<div class=\"' + contentclass + '\"></div>');\n        }\n        if (typeof raw == 'undefined') {\n            return result.find('h4.' + titleclass).length > 0;\n        }\n        var titleTag = result.find('.' + titleclass);\n        if (content > '') {\n            titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + content + '</h4>');\n            return true;\n        } else {\n            titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n            return false;\n        }\n    };\n    this.setResultTab = function(name, content, raw) {\n        var titleclass = 'vpl_ide_accordion_t_' + name;\n        var contentclass = 'vpl_ide_accordion_c_' + name;\n        if (result.find('.' + contentclass).length == 0) {\n            result.append('<div class=\"' + titleclass + '\"></div>');\n            result.append('<div class=\"' + contentclass + '\"></div>');\n        }\n        if (typeof raw == 'undefined') {\n            return result.find('h4.' + titleclass).length > 0;\n        }\n        var titleTag = result.find('.' + titleclass);\n        var contentTag = result.find('.' + contentclass);\n        var HTMLcontent = $('<div>' + content + '</div>');\n        HTMLcontent.find('h4').replaceWith(function() {\n            return $(\"<h5>\").append($(this).contents());\n        });\n        if (contentTag.html() == HTMLcontent.html()) {\n            return content > '';\n        }\n        if (content > '') {\n            titleTag.replaceWith('<h4 class=\"' + titleclass + '\">' + str(name) + '</h4>');\n            contentTag.replaceWith('<div class=\"ui-widget ' + contentclass + '\">' + HTMLcontent.html() + '</div>');\n            return true;\n        } else {\n            titleTag.replaceWith('<div class=\"' + titleclass + '\"></div>');\n            contentTag.replaceWith('<div class=\"' + contentclass + '\"></div>');\n            return false;\n        }\n    };\n    this.applyMathJax = function() {\n        if (typeof window.MathJax == 'object') { // MathJax is loaded\n            try {\n                let math = result.find(\".vpl_ide_accordion_c_description\")[0];\n                if (math) {\n                    if (window.MathJax.Hub && window.MathJax.Hub.Queue) {\n                        window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub, math]);\n                    } else if (window.MathJax.startup && window.MathJax.startup.promise) {\n                        window.MathJax.startup.promise = window.MathJax.startup.promise\n                        .then(() => window.MathJax.typesetPromise([math]))\n                        .catch(e => {\n                            VPLUtil.log(\"MathJax error\" + e);\n                        });\n                    }\n                }\n            } catch (e) {\n                VPLUtil.log(\"MathJax error\" + e);\n            }\n        }\n    };\n    this.setResult = function(res, go) {\n        self.updateEvaluationNumber(res);\n        var files = fileManager.getFiles();\n        var fileNames = [];\n        var i;\n        for (i = 0; i < files.length; i++) {\n            fileNames[i] = files[i].getFileName();\n            files[i].clearAnnotations();\n        }\n        var show = false;\n        var hasContent;\n        var grade = VPLUtil.sanitizeText(res.grade);\n        var gradeShow;\n        var formated;\n        gradeShow = self.setResultGrade(grade, res.grade);\n        show = show || gradeShow;\n        hasContent = self.setResultTab('variables', res.variables, res.variables);\n        show = show || hasContent;\n        formated = VPLUtil.processResult(res.compilation, fileNames, files, true, false);\n        hasContent = self.setResultTab('compilation', formated, res.compilation);\n        show = show || hasContent;\n        formated = VPLUtil.processResult(res.evaluation, fileNames, files, false, false);\n        hasContent = self.setResultTab('comments', formated, res.evaluation);\n        show = show || hasContent;\n        formated = VPLUtil.sanitizeText(res.execution);\n        hasContent = self.setResultTab('execution', formated, res.execution);\n        show = show || hasContent;\n        hasContent = self.setResultTab('description', window.VPLDescription, window.VPLDescription);\n        if (hasContent) {\n            self.applyMathJax();\n        }\n        show = show || hasContent;\n        if (show) {\n            resultContainer.show();\n            resultContainer.vplVisible = true;\n            result.accordion(\"refresh\");\n            result.accordion('option', 'active', gradeShow ? 1 : 0);\n            for (i = 0; i < files.length; i++) {\n                var anot = files[i].getAnnotations();\n                for (var j = 0; j < anot.length; j++) {\n                    if (go || anot[j].type == 'error') {\n                        fileManager.gotoFile(i, anot[j].row + 1);\n                        break;\n                    }\n                }\n            }\n            $('#vpl_ide_shrightpanel').show();\n        } else {\n            resultContainer.hide();\n            resultContainer.vplVisible = false;\n            $('#vpl_ide_shrightpanel').hide();\n        }\n        VPLUtil.delay('autoResizeTab', autoResizeTab);\n        VPLUtil.delay('fixAccordion', function() {\n            result.accordion('option', 'active', gradeShow ? 1 : 0);\n        });\n    };\n\n    result.accordion({\n        heightStyle: 'fill',\n        header: 'h4',\n        animate: false,\n        beforeActivate: avoidSelectGrade,\n    });\n    resultContainer.width(2 * resultContainer.vplMinWidth);\n    result.on('click', 'a', function(event) {\n        if (fileManager.gotoFileLink(event.currentTarget)) {\n            event.preventDefault();\n        }\n    });\n    resultContainer.vplVisible = false;\n    resultContainer.hide();\n\n    fileListContainer.addClass('ui-tabs ui-widget ui-widget-content ui-corner-all');\n    fileList.text(str('filelist'));\n    fileList.html(VPLUI.iconFolder() + fileList.html());\n    fileList.addClass(\"ui-widget-header ui-button-text-only ui-corner-all\");\n    fileListContent.addClass(\"ui-widget ui-corner-all\");\n    fileListContainer.width(2 * fileListContainer.vplMinWidth);\n    fileListContainer.on('click', 'a', function(event) {\n        event.preventDefault();\n        fileManager.gotoFileLink(event.currentTarget);\n    });\n    fileListContainer.vplVisible = false;\n    fileListContainer.hide();\n    var tabsAir = false;\n    /**\n     * Returns separation space\n     * @returns {int} size in pixels\n     */\n    function getTabsAir() {\n        if (tabsAir === false) {\n            tabsAir = (tabs.outerWidth(true) - tabs.width()) / 2;\n        }\n        return tabsAir;\n    }\n    /**\n     * Resize tab width\n     * @param {Event} e Unused\n     * @param {Object} ui UI object\n     */\n    function resizeTabWidth(e, ui) {\n        var diffLeft = ui.position.left - ui.originalPosition.left;\n        var maxWidth;\n        if (diffLeft !== 0) {\n            maxWidth = tabs.width() + fileListContainer.width() - fileListContainer.vplMinWidth;\n            tabs.resizable('option', 'maxWidth', maxWidth);\n            fileListContainer.width(fileListContainer.vplOriginalWidth + diffLeft);\n        } else {\n            maxWidth = tabs.width() + resultContainer.width() - resultContainer.vplMinWidth;\n            tabs.resizable('option', 'maxWidth', maxWidth);\n            var diffWidth = ui.size.width - ui.originalSize.width;\n            resultContainer.width(resultContainer.vplOriginalWidth - diffWidth);\n        }\n        fileManager.currentFile('adjustSize');\n    }\n    var resizableOptions = {\n        containment: 'parent',\n        resize: resizeTabWidth,\n        start: function() {\n            $(window).off('resize', autoResizeTab);\n            tabs.resizable('option', 'minWidth', 100);\n            if (resultContainer.vplVisible) {\n                resultContainer.vplOriginalWidth = resultContainer.width();\n            }\n            if (fileListContainer.vplVisible) {\n                fileListContainer.vplOriginalWidth = fileListContainer.width();\n            }\n        },\n        stop: function(e, ui) {\n            resizeTabWidth(e, ui);\n            tabs.resizable('option', 'maxWidth', 100000);\n            tabs.resizable('option', 'minWidth', 0);\n            autoResizeTab();\n            $(window).on('resize', autoResizeTab);\n        },\n        handles: \"\"\n    };\n    tabs.resizable(resizableOptions);\n        /**\n         * Updates handles for internal IDE resize\n         */\n    function updateTabsHandles() {\n        var handles = ['e', 'w', 'e', 'e, w'];\n        var index = 0;\n        index += fileListContainer.vplVisible ? 1 : 0;\n        index += resultContainer.vplVisible ? 2 : 0;\n        tabs.resizable('destroy');\n        resizableOptions.handles = handles[index];\n        resizableOptions.disable = index === 0;\n        tabs.resizable(resizableOptions);\n    }\n    /**\n     * Resize the IDE height\n     */\n    function resizeHeight() {\n        var newHeight = $(window).outerHeight();\n        newHeight -= menu.offset().top + menu.height() + (fullScreen ? getTabsAir() : 20);\n        if (newHeight < 250) {\n            newHeight = 250;\n        }\n        tr.height(newHeight);\n        var panelHeight = newHeight - 3 * getTabsAir();\n        tabs.height(panelHeight);\n        if (resultContainer.vplVisible) {\n            resultContainer.height(panelHeight + getTabsAir());\n            result.accordion('refresh');\n        }\n        if (fileListContainer.vplVisible) {\n            fileListContent.height(panelHeight - (fileList.outerHeight() + getTabsAir()));\n            fileListContainer.height(panelHeight);\n        }\n    }\n    adjustTabsTitles = function(center) {\n        var newWidth = tabs.width();\n        var tabsUlWidth = 0;\n        tabsUl.width(100000);\n        var last = tabsUl.children('li:visible').last();\n        if (last.length) {\n            var parentScrollLeft = tabsUl.parent().scrollLeft();\n            tabsUlWidth = parentScrollLeft + last.position().left + last.width() + tabsAir;\n            tabsUl.width(tabsUlWidth);\n            var file = fileManager.currentFile();\n            if (file && center) {\n                var fileTab = $(file.getTabNameId());\n                var scroll = parentScrollLeft + fileTab.position().left;\n                scroll -= (newWidth - fileTab.outerWidth()) / 2;\n                if (scroll < 0) {\n                    scroll = 0;\n                }\n                tabsUl.parent().finish().animate({\n                    scrollLeft: scroll\n                }, 'slow');\n            }\n        }\n        if (tabsUlWidth < newWidth) {\n            tabsUl.width('');\n        }\n    };\n    autoResizeTab = function() {\n        var oldWidth = tabs.width();\n        var newWidth = menu.width();\n        var planb = false;\n        updateTabsHandles();\n        tr.width(menu.outerWidth());\n        if (fileListContainer.vplVisible) {\n            var left = fileListContainer.outerWidth() + tabsAir;\n            oldWidth += left;\n            if (left >= 100) {\n                newWidth -= left;\n                tabs.css('left', left);\n            } else {\n                planb = true;\n            }\n        } else {\n            tabs.css('left', 0);\n        }\n        if (resultContainer.vplVisible) {\n            var right = resultContainer.outerWidth() + tabsAir;\n            oldWidth += right;\n            newWidth -= right;\n            if (newWidth < 100) {\n                planb = true;\n            }\n        }\n        if (planb) {\n            var rel = menu.width() / oldWidth;\n            var wfl = 0;\n            if (fileListContainer.vplVisible) {\n                wfl = fileListContainer.width() * rel;\n                fileListContainer.width(wfl - tabsAir);\n                wfl += tabsAir;\n                tabs.css('left', wfl);\n            }\n            tabs.width(tabs.width() * rel);\n            if (resultContainer.vplVisible) {\n                resultContainer.width(menu.width() - (wfl + tabs.width() + tabsAir));\n            }\n        } else {\n            tabs.width(newWidth);\n        }\n        adjustTabsTitles(true);\n        resizeHeight();\n        fileManager.currentFile('adjustSize');\n    };\n    /**\n     * Transfer focus to current file\n     */\n    function focusCurrentFile() {\n        fileManager.currentFile('focus');\n    }\n    var dialogbaseOptions = $.extend({}, {\n        close: focusCurrentFile\n    }, VPLUI.dialogbaseOptions);\n    /**\n     * Shows a dialog with a message.\n     * @param {string} message\n     * @param {Object} options icon, title, actions handler (ok, yes, no, close)\n     * @returns {JQuery} JQueryUI Dialog object already open\n     */\n    function showMessage(message, options) {\n        return VPLUI.showMessage(message, $.extend({}, dialogbaseOptions, options));\n    }\n    showErrorMessage = function(message) {\n        return VPLUI.showErrorMessage(message, {\n            close: focusCurrentFile\n        });\n    };\n\n    var dialogNew = $('#vpl_ide_dialog_new');\n    /**\n     * The event handler for the new file action\n     * @param {Object} event\n     * @return {boolean}\n     */\n    function newFileHandler(event) {\n        if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n            return true;\n        }\n        dialogNew.dialog('close');\n        var file = {\n            name: $('#vpl_ide_input_newfilename').val(),\n            contents: '',\n            encoding: 0\n        };\n        var newfile = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n        if (newfile) {\n            fileManager.open(newfile);\n            tabs.tabs('option', 'active', fileManager.getTabPos(newfile.getId()));\n            newfile.focus();\n            return true;\n        }\n        return false;\n    }\n\n    var dialogButtons = {};\n    dialogButtons[str('ok')] = newFileHandler;\n    dialogButtons[str('cancel')] = function() {\n        $(this).dialog('close');\n    };\n    dialogNew.find('input').on('keypress', newFileHandler);\n    dialogNew.dialog($.extend({}, dialogbaseOptions, {\n        title: str('create_new_file'),\n        buttons: dialogButtons\n    }));\n    VPLUI.setDialogTitleIcon(dialogNew, 'new');\n\n    var dialogRename = $('#vpl_ide_dialog_rename');\n    /**\n     * The event handler for the rename current file action\n     * @param {Object} event\n     */\n    function renameHandler(event) {\n        if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n            return;\n        }\n        dialogRename.dialog('close');\n        fileManager.renameFile(fileManager.currentFile('getFileName'),\n                $('#vpl_ide_input_renamefilename').val(), showErrorMessage);\n        event.preventDefault();\n    }\n    dialogRename.find('input').on('keypress', renameHandler);\n    dialogButtons[str('ok')] = renameHandler;\n    dialogRename.dialog($.extend({}, dialogbaseOptions, {\n        open: function() {\n            $('#vpl_ide_input_renamefilename').val(fileManager.currentFile('getFileName'));\n        },\n        title: str('rename_file'),\n        buttons: dialogButtons\n    }));\n    VPLUI.setDialogTitleIcon(dialogRename, 'rename');\n\n    var dialogRenameDirectory = $('#vpl_ide_dialog_renamedir');\n    /**\n     * The event handler for rename a directory\n     * @param {Object} event\n     */\n    function renameDirectoryHandler(event) {\n        if (!(event.type == 'click' || ((event.type == 'keypress') && event.keyCode == 13))) {\n            return;\n        }\n        dialogRenameDirectory.dialog('close');\n        fileManager.renameDirectory($('#vpl_ide_input_olddirectoryname').val(),\n                $('#vpl_ide_input_renamedirectory').val(), showErrorMessage);\n        event.preventDefault();\n    }\n    dialogRenameDirectory.find('input').on('keypress', renameDirectoryHandler);\n    dialogButtons[str('ok')] = renameDirectoryHandler;\n    dialogRenameDirectory.dialog($.extend({}, dialogbaseOptions, {\n        title: str('rename_directory'),\n        buttons: dialogButtons\n    }));\n    VPLUI.setDialogTitleIcon(dialogRenameDirectory, 'filelist');\n    renameDiretoryAction = function(event) {\n        if (event.target.hasAttribute('data-dirname')) {\n            var dirname = event.target.getAttribute('data-dirname');\n            $('#vpl_ide_input_olddirectoryname').val(dirname);\n            $('#vpl_ide_input_renamedirectory').val(dirname);\n            dialogRenameDirectory.dialog('open');\n        }\n    };\n    var dialogComments = $('#vpl_ide_dialog_comments');\n    var oldStudentComments = '';\n    dialogButtons[str('ok')] = function() {\n        if (oldStudentComments != $('#vpl_ide_input_comments').val()) {\n            fileManager.setModified();\n        }\n        $(this).dialog('close');\n    };\n    dialogComments.dialog($.extend({}, dialogbaseOptions, {\n        open: function() {\n            oldStudentComments = $('#vpl_ide_input_comments').val();\n        },\n        title: str('comments'),\n        width: '40em',\n        buttons: dialogButtons\n    }));\n    VPLUI.setDialogTitleIcon(dialogComments, 'comments');\n\n    $('#vpl_ide_input_comments').width('30em');\n    var aboutDialog = $('#vpl_ide_dialog_about');\n    var OKButtons = {};\n    OKButtons[str('ok')] = function() {\n        $(this).dialog('close');\n    };\n    var shortcutDialog = $('#vpl_ide_dialog_shortcuts');\n    shortcutDialog.dialog($.extend({}, dialogbaseOptions, {\n        open: function() {\n            var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n            $('#vpl_ide_dialog_shortcuts').html(html);\n        },\n        title: str('shortcuts'),\n        width: 400,\n        height: 300,\n        buttons: OKButtons\n    }));\n    shortcutDialog.dialog('option', 'height', 300);\n    VPLUI.setDialogTitleIcon(shortcutDialog, 'shortcuts');\n\n    OKButtons[str('shortcuts')] = function() {\n        $(this).dialog('close');\n        shortcutDialog.dialog('open');\n    };\n    aboutDialog.dialog($.extend({}, dialogbaseOptions, {\n        open: function() {\n            var html = menuButtons.getShortcuts(fileManager.currentFile('getEditor'));\n            aboutDialog.next().find(\"button\").filter(\n                function() {\n                    return $(this).text() == str('shortcuts');\n                }\n            ).button(html != '' ? 'enable' : 'disable');\n        },\n        title: str('about'),\n        width: 400,\n        height: 300,\n        buttons: OKButtons\n    }));\n    aboutDialog.dialog('option', 'height', 300);\n    VPLUI.setDialogTitleIcon(aboutDialog, 'about');\n\n    var dialogSort = $('#vpl_ide_dialog_sort');\n    var dialogSortButtons = {};\n    dialogSortButtons[str('ok')] = function() {\n        var files = fileManager.getFiles();\n        var regNoNumber = /[^\\d]*/;\n        var sorted = [];\n        var i = 0;\n        var newOrder = $('#vpl_sort_list li');\n        if (newOrder.length != files.length) {\n            return;\n        }\n        newOrder.each(function() {\n            var orig = parseInt(this.id.replace(regNoNumber, ''));\n            sorted.push(files[orig]);\n        });\n        for (i = 0; i < newOrder.length; i++) {\n            files[i] = sorted[i];\n        }\n        fileManager.setModified();\n        $(this).dialog('close');\n    };\n    dialogSortButtons[str('cancel')] = function() {\n        $(this).dialog('close');\n    };\n    dialogSort.dialog($.extend({}, dialogbaseOptions, {\n        title: str('sort'),\n        buttons: dialogSortButtons,\n        open: function() {\n            var list = $('#vpl_sort_list');\n            list.html('');\n            var files = fileManager.getFiles();\n            for (var i = 0; i < files.length; i++) {\n                var file = $('<li id=\"vpl_fsort_' + i + '\"class=\"ui-widget-content\"></li>');\n                if (files[i].getId() < minNumberOfFiles) {\n                    file.addClass('ui-state-disabled');\n                }\n                file.text((i + 1) + '-' + files[i].getFileName());\n                list.append(file);\n            }\n            list.sortable({\n                items: \"li:not(.ui-state-disabled)\",\n                placeholder: \"ui-state-highlight\",\n                start: function(event, ui) {\n                    ui.item.addClass('ui-state-highlight');\n                },\n                stop: function(event, ui) {\n                    ui.item.removeClass('ui-state-highlight');\n                },\n            });\n            list.disableSelection();\n        },\n        maxHeight: 400\n    }));\n    VPLUI.setDialogTitleIcon(dialogSort, 'sort');\n\n    var dialogMultidelete = $('#vpl_ide_dialog_multidelete');\n    var dialogMultideleteButtons = {};\n    dialogMultideleteButtons[str('selectall')] = function() {\n        $(this).find('input').prop(\"checked\", true);\n    };\n    dialogMultideleteButtons[str('deselectall')] = function() {\n        $(this).find('input').prop(\"checked\", false);\n    };\n    dialogMultideleteButtons[str('deleteselected')] = function() {\n        var files = fileManager.getFiles();\n        var toDeleteList = [];\n        var labelList = $('#vpl_multidelete_list label');\n        labelList.each(function() {\n            var label = $(this);\n            if (label.find('input').prop('checked')) {\n                var id = label.data('fileid');\n                toDeleteList.push(files[id].getFileName());\n            }\n        });\n        for (var i = 0; i < toDeleteList.length; i++) {\n            fileManager.deleteFile(toDeleteList[i], showErrorMessage);\n        }\n        VPLUtil.delay('updateMenu', updateMenu);\n        VPLUtil.delay('updateFileList', fileManager.updateFileList);\n        $(this).dialog('close');\n    };\n    dialogMultideleteButtons[str('cancel')] = function() {\n        $(this).dialog('close');\n    };\n    dialogMultidelete.dialog($.extend({}, dialogbaseOptions, {\n        title: str('multidelete'),\n        buttons: dialogMultideleteButtons,\n        open: function() {\n            var list = $('#vpl_multidelete_list');\n            list.html('');\n            var files = fileManager.getFiles();\n            for (var i = minNumberOfFiles; i < files.length; i++) {\n                var name = VPLUtil.sanitizeText(files[i].getFileName());\n                var file = $('<label><input type=\"checkbox\"> ' + name + '</label>');\n                file.data('fileid', i);\n                list.append(file);\n                list.append('<br>');\n            }\n            list.find('label').button();\n        },\n        maxHeight: 400,\n        maxWidth: 400\n    }));\n    VPLUI.setDialogTitleIcon(dialogMultidelete, 'multidelete');\n\n    var dialogFontsize = $('#vpl_ide_dialog_fontsize');\n    var fontsizeSlider = $('#vpl_ide_dialog_fontsize .vpl_fontsize_slider');\n    var dialogFontFizeButtons = {};\n    dialogFontFizeButtons[str('ok')] = function() {\n        var value = fontsizeSlider.slider(\"value\");\n        fileManager.setFontSize(value);\n        $(this).dialog('close');\n        VPLUtil.setUserPreferences({fontSize: value});\n    };\n    dialogFontFizeButtons[str('cancel')] = function() {\n        fileManager.setFontSize(fontsizeSlider.data(\"vpl_fontsize\"));\n        $(this).dialog('close');\n    };\n    dialogFontFizeButtons[str('reset')] = function() {\n        fontsizeSlider.slider('value', 12);\n    };\n    dialogFontsize.dialog($.extend({}, dialogbaseOptions, {\n        title: str('fontsize'),\n        buttons: dialogFontFizeButtons,\n        open: function() {\n            fontsizeSlider.data(\"vpl_fontsize\", fileManager.getFontSize());\n            fontsizeSlider.slider('value', fileManager.getFontSize());\n        },\n    }));\n    fontsizeSlider.slider({\n        min: 1,\n        max: 48,\n        change: function() {\n            var value = fontsizeSlider.slider(\"value\");\n            fileManager.setFontSize(value);\n            dialogFontsize.find('.vpl_fontsize_slider_value').text(value);\n        }\n    });\n    VPLUI.setDialogTitleIcon(dialogFontsize, 'fontsize');\n\n    var dialogAceTheme = $('#vpl_ide_dialog_acetheme');\n    var acethemeSelect = $('#vpl_ide_dialog_acetheme select');\n    var dialogAceThemeButtons = {};\n    dialogAceThemeButtons[str('ok')] = function() {\n        fileManager.setTheme(acethemeSelect.val());\n        $(this).dialog('close');\n        VPLUtil.setUserPreferences({aceTheme: acethemeSelect.val()});\n    };\n    dialogAceThemeButtons[str('cancel')] = function() {\n        fileManager.setTheme(acethemeSelect.data(\"acetheme\"));\n        $(this).dialog('close');\n    };\n    dialogAceThemeButtons[str('reset')] = function() {\n        acethemeSelect.val(acethemeSelect.data(\"acetheme\"));\n        fileManager.setTheme(acethemeSelect.val());\n    };\n    dialogAceTheme.dialog($.extend({}, dialogbaseOptions, {\n        title: str('theme'),\n        buttons: dialogAceThemeButtons,\n        modal: false,\n        open: function() {\n            acethemeSelect.data(\"acetheme\", fileManager.getTheme());\n            acethemeSelect.val(fileManager.getTheme());\n        },\n    }));\n    acethemeSelect.on('change', function() {\n            fileManager.setTheme(acethemeSelect.val());\n    });\n    VPLUI.setDialogTitleIcon(dialogAceTheme, 'theme');\n\n    var terminal = new VPLTerminal('vpl_dialog_terminal', 'vpl_terminal', str);\n    var VNCClient = new VPLVNCClient('vpl_dialog_vnc', str);\n    var lastConsole = terminal;\n    var fileSelect = $('#vpl_ide_input_file');\n    var fileSelectHandler = function() {\n        VPLUI.readSelectedFiles(this.files, function(file) {\n            return fileManager.addFile(file, true, updateMenu, showErrorMessage);\n        },\n        function() {\n            fileManager.fileListVisibleIfNeeded();\n        });\n    };\n    fileSelect.on('change', fileSelectHandler);\n    // Menu acctions.\n    menuButtons.add({\n        name: 'filelist',\n        originalAction: function() {\n            fileManager.fileListVisible(!fileManager.isFileListVisible());\n            VPLUtil.delay('updateMenu', updateMenu);\n            VPLUtil.delay('autoResizeTab', autoResizeTab);\n            VPLUtil.delay('updateFileList', fileManager.updateFileList);\n        },\n        bindKey: {\n            win: 'Ctrl-L',\n            mac: 'Ctrl-L'\n        }\n    });\n\n    menuButtons.add({\n        name: 'new',\n        originalAction: function() {\n            if (fileManager.length() < maxNumberOfFiles) {\n                dialogNew.dialog('open');\n            }\n        },\n        bindKey: {\n            win: 'Alt-N',\n            mac: 'Option-N'\n        }\n    });\n    menuButtons.add({\n        name: 'rename',\n        originalAction: function() {\n            var file = fileManager.currentFile();\n            if (file && file.getId() >= minNumberOfFiles) {\n                dialogRename.dialog('open');\n            }\n        },\n        bindKey: {\n            win: 'Ctrl-R',\n            mac: 'Ctrl-R'\n        }\n    });\n    menuButtons.add({\n        name: 'delete',\n        originalAction: function() {\n            var file = fileManager.currentFile();\n            if (!file) {\n                return;\n            }\n            var filename = file.getFileName();\n            var message = str('delete_file_fq', filename);\n            showMessage(message, {\n                ok: function() {\n                    fileManager.deleteFile(filename, showErrorMessage);\n                },\n                title: str('delete_file_q'),\n                icon: 'trash'\n            });\n        },\n        bindKey: {\n            win: 'Ctrl-D',\n            mac: 'Ctrl-D'\n        }\n    });\n    menuButtons.add({\n        name: 'close',\n        originalAction: function() {\n            var file = fileManager.currentFile();\n            if (!file) {\n                return;\n            }\n            fileManager.closeFile(file);\n        },\n        bindKey: {\n            win: 'Alt-W',\n            mac: 'Option-W'\n        }\n    });\n    menuButtons.add({\n        name: 'import',\n        originalAction: function() {\n            fileSelect.val('');\n            fileSelect.trigger('click');\n        },\n        bindKey: {\n            win: 'Ctrl-I',\n            mac: 'Ctrl-I'\n        }\n    });\n    menuButtons.add({\n        name: 'sort',\n        originalAction: function() {\n            dialogSort.dialog('open');\n        },\n        bindKey: {\n            win: 'Ctrl-O',\n            mac: 'Ctrl-O'\n        }\n    });\n    menuButtons.add({\n        name: 'multidelete',\n        originalAction: function() {\n            dialogMultidelete.dialog('open');\n        }\n    });\n    menuButtons.add({\n        name: 'showparentfiles',\n        originalAction: function() {\n            openpopup(null, {\n                url: options.showparentfilesurl,\n                options: 'width=' + Math.max(screen.availWidth / 2, 780) +\n                            ',height=' + screen.availHeight +\n                            ',left=' + (screen.availWidth / 4)\n            });\n        }\n    });\n    menuButtons.add({\n        name: 'fontsize',\n        originalAction: function() {\n            dialogFontsize.dialog('open');\n        }\n    });\n    menuButtons.add({\n        name: 'theme',\n        originalAction: function() {\n            dialogAceTheme.dialog('open');\n        }\n    });\n    menuButtons.add({\n        name: 'print',\n        originalAction: function() {\n            window.print();\n        },\n        bindKey: {\n            win: 'Alt-P',\n            mac: 'Command-P'\n        }\n    });\n    menuButtons.add({\n        name: 'undo',\n        originalAction: function() {\n            fileManager.currentFile('undo');\n        }\n    });\n    menuButtons.add({\n        name: 'redo',\n        originalAction: function() {\n            fileManager.currentFile('redo');\n        }\n    });\n    menuButtons.add({\n        name: 'select_all',\n        editorName: 'selectall',\n        originalAction: function() {\n            fileManager.currentFile('selectAll');\n        }\n    });\n    menuButtons.add({\n        name: 'find',\n        originalAction: function() {\n            fileManager.currentFile('find');\n        }\n    });\n    menuButtons.add({\n        name: 'find_replace',\n        editorName: 'replace',\n        originalAction: function() {\n            fileManager.currentFile('replace');\n        }\n    });\n    menuButtons.add({\n        name: 'next',\n        editorName: 'findnext',\n        originalAction: function() {\n            fileManager.currentFile('next');\n        }\n    });\n    menuButtons.add({\n        name: 'fullscreen',\n        originalAction: function() {\n            if (fullScreen) {\n                rootObj.removeClass('vpl_ide_root_fullscreen');\n                $('body').removeClass('vpl_body_fullscreen');\n                menuButtons.setText('fullscreen', 'fullscreen');\n                $('#vpl_ide_user').hide();\n                fullScreen = false;\n            } else {\n                $('body').addClass('vpl_body_fullscreen').scrollTop(0);\n                rootObj.addClass('vpl_ide_root_fullscreen');\n                menuButtons.setText('fullscreen', 'regularscreen');\n                if (options.username) {\n                    $('#vpl_ide_user').show();\n                }\n                fullScreen = true;\n            }\n            focusCurrentFile();\n            setTimeout(autoResizeTab, 10);\n        },\n        bindKey: {\n            win: 'Alt-F',\n            mac: 'Ctrl-F'\n        }\n    });\n    menuButtons.add({\n        name: 'download',\n        originalAction: function() {\n            window.location = options.download;\n        }\n    });\n    /**\n     * Reset files action\n     */\n    function resetFiles() {\n        VPLUI.requestAction('resetfiles', '', {}, options.ajaxurl)\n        .done(function(response) {\n            var files = response.files;\n            for (var fileName in files) {\n                if (files.hasOwnProperty(fileName)) {\n                    fileManager.addFile(files[fileName], true, VPLUtil.doNothing, showErrorMessage);\n                }\n            }\n            fileManager.fileListVisibleIfNeeded();\n            VPLUtil.delay('updateMenu', updateMenu);\n        }).fail(showErrorMessage);\n    }\n    menuButtons.add({\n        name: 'resetfiles',\n        originalAction: function() {\n            showMessage(str('sureresetfiles'), {\n                title: str('resetfiles'),\n                ok: resetFiles,\n                icon: 'resetfiles'\n            });\n        }\n    });\n    var noconfirmation = false;\n    menuButtons.add({\n        name: 'save',\n        originalAction: function() {\n            var data = {\n                files: fileManager.getFilesToSave(),\n                comments: $('#vpl_ide_input_comments').val(),\n                version: noconfirmation ? -1 : fileManager.getVersion()\n            };\n            if (JSON.stringify(data).length > options.postMaxSize) {\n                showErrorMessage(str('maxpostsizeexceeded'));\n                return;\n            }\n            /**\n             * Save action\n             */\n            function doSave() {\n                VPLUI.requestAction('save', 'saving', data, options.ajaxurl)\n                .done(function(response) {\n                    if (response.requestsconfirmation && !noconfirmation) {\n                        var checkboxID = 'vpl_donotshowagain';\n                        var donotshowagain = '<input type=\"checkbox\" id=\"' + checkboxID + '\"'\n                                            + ' class=\"align-text-bottom mr-1 mt-3\">'\n                                            + '<label for=\"' + checkboxID + '\">' + str('donotshowagain') + '</label>';\n                        var $checkbox;\n                        showMessage(response.question + '<br>' + donotshowagain, {\n                            title: str('saving'),\n                            icon: 'alert',\n                            yes: function() {\n                                if ($checkbox.length == 1 && $checkbox.prop('checked')) {\n                                    noconfirmation = true;\n                                }\n                                data.version = 0;\n                                doSave();\n                            }\n                        });\n                        $checkbox = $('#' + checkboxID);\n                    } else {\n                        fileManager.resetModified();\n                        fileManager.setVersion(response.version);\n                        menuButtons.setTimeLeft(response);\n                        VPLUtil.delay('updateMenu', updateMenu);\n                        if (VPLUI.monitorRunning()) {\n                            data.processid = VPLUtil.getProcessId();\n                            VPLUI.requestAction('update', 'updating', data, options.ajaxurl);\n                        }\n                    }\n                }).fail(showErrorMessage);\n            }\n            doSave();\n        },\n        bindKey: {\n            win: 'Ctrl-S',\n            mac: 'Command-S'\n        }\n    });\n\n    /**\n     * Launches the action\n     *\n     * @param {string} action Action 'run', 'debug', 'evaluate'\n     * @param {string} acting I18n for the action in progress\n     * @param {string} data Data attached to the action\n     */\n    function executionRequest(action, acting, data) {\n        if (!data) {\n            data = {};\n        }\n        if (!lastConsole.isConnected()) {\n            VPLUI.requestAction(action, '', data, options.ajaxurl)\n            .done(function(response) {\n                VPLUI.webSocketMonitor(response, action, acting, executionActions);\n            })\n            .fail(showErrorMessage);\n        }\n    }\n    /**\n     * Launches the run action\n     */\n    function runAction() {\n        executionRequest('run', 'running', {\n            XGEOMETRY: VNCClient.getCanvasSize(),\n            currentFileName: fileManager.getCurrentFileName(),\n        });\n    }\n    menuButtons.add({\n        name: 'run',\n        originalAction: function() {\n            executionActions.setLastAction(runAction);\n            runAction();\n        },\n        bindKey: {\n            win: 'Ctrl-F11',\n            mac: 'Command-U'\n        }\n    });\n    /**\n     * Launches the debug action\n     */\n    function debugAction() {\n        executionRequest('debug', 'debugging', {\n            XGEOMETRY: VNCClient.getCanvasSize(),\n            currentFileName: fileManager.getCurrentFileName(),\n        });\n    }\n    menuButtons.add({\n        name: 'debug',\n        originalAction: function() {\n            executionActions.setLastAction(debugAction);\n            debugAction();\n        },\n        bindKey: {\n            win: 'Alt-F11',\n            mac: 'Option-U'\n        }\n    });\n    /**\n     * Launches the evaluate action\n     */\n    function evaluateAction() {\n        executionRequest('evaluate', 'evaluating');\n    }\n    menuButtons.add({\n        name: 'evaluate',\n        originalAction: function() {\n            executionActions.setLastAction(evaluateAction);\n            evaluateAction();\n        },\n        bindKey: {\n            win: 'Shift-F11',\n            mac: 'Command-Option-U'\n        }\n    });\n    menuButtons.add({\n        name: 'comments',\n        originalAction: function() {\n            dialogComments.dialog('open');\n        },\n    });\n    menuButtons.add({\n        name: 'console',\n        originalAction: function() {\n            if (lastConsole.isOpen()) {\n                lastConsole.close();\n            } else {\n                lastConsole.show();\n            }\n        }\n    });\n    menuButtons.add({name: 'user'});\n    menuButtons.add({\n        name: 'about',\n        originalAction: function() {\n            aboutDialog.dialog('open');\n        }\n    });\n    menuButtons.add({\n        name: 'timeleft',\n        originalAction: function() {\n            menuButtons.toggleTimeLeft();\n        }\n    });\n    menuButtons.add({\n        name: 'more',\n        originalAction: function() {\n            var tag = $('#vpl_ide_menuextra');\n            if (tag.is(\":visible\")) {\n                menuButtons.setText('more', 'more', VPLUtil.str('more'));\n                tag.hide();\n            } else {\n                menuButtons.setText('more', 'less', VPLUtil.str('less'));\n                tag.show();\n            }\n            VPLUtil.delay('updateMenu', updateMenu);\n            VPLUtil.delay('autoResizeTab', autoResizeTab);\n        }\n    });\n    menuButtons.add({\n        name: 'shrightpanel',\n        icon: 'close-rightpanel',\n        originalAction: function() {\n            if (resultContainer.vplVisible) {\n                resultContainer.hide();\n                resultContainer.vplVisible = false;\n                menuButtons.setText('shrightpanel', 'open-rightpanel', VPLUtil.str('shrightpanel'));\n            } else {\n                menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n                resultContainer.show();\n                resultContainer.vplVisible = true;\n            }\n            VPLUtil.delay('autoResizeTab', autoResizeTab);\n        },\n        bindKey: {\n            win: 'Ctrl-M',\n            mac: 'Ctrl-M'\n        }\n    });\n    var rightpanelstyle = \"position:absolute;right:0;top:60px;z-index:100;margin:3px\";\n    tr.append('<span style=\"' + rightpanelstyle + '\">' + menuButtons.getHTML('shrightpanel') + '</span>');\n    var rightPanelButton = $('#vpl_ide_shrightpanel');\n    menuButtons.setText('shrightpanel', 'close-rightpanel', VPLUtil.str('shrightpanel'));\n\n    rightPanelButton.button();\n    rightPanelButton.css('padding', '0');\n    $('#vpl_ide_shrightpanel.ui-button-text').css('padding', '0');\n    rightPanelButton.on('click', function() {\n        menuButtons.launchAction('shrightpanel');\n    });\n    rightPanelButton.hide();\n    menu.addClass(\"ui-widget-header ui-corner-all\");\n    var menuHtml = \"\";\n    menuHtml += menuButtons.getHTML('more');\n    menuHtml += menuButtons.getHTML('save');\n    menuHtml += \"<span id='vpl_ide_mexecution'>\";\n    menuHtml += menuButtons.getHTML('run');\n    menuHtml += menuButtons.getHTML('debug');\n    menuHtml += menuButtons.getHTML('evaluate');\n    menuHtml += menuButtons.getHTML('comments');\n    menuHtml += menuButtons.getHTML('console');\n    menuHtml += \"</span> \";\n    menuHtml += \"<span id='vpl_ide_menuextra'>\";\n    menuHtml += \"<span id='vpl_ide_file'>\";\n    // TODO autosave not implemented.\n    menuHtml += menuButtons.getHTML('filelist');\n    menuHtml += menuButtons.getHTML('new');\n    menuHtml += menuButtons.getHTML('rename');\n    menuHtml += menuButtons.getHTML('delete');\n    menuHtml += menuButtons.getHTML('import');\n    menuHtml += menuButtons.getHTML('download');\n    menuHtml += menuButtons.getHTML('resetfiles');\n    menuHtml += menuButtons.getHTML('sort');\n    menuHtml += menuButtons.getHTML('multidelete');\n    menuHtml += menuButtons.getHTML('showparentfiles');\n    menuHtml += menuButtons.getHTML('fontsize');\n    menuHtml += menuButtons.getHTML('theme');\n    menuHtml += \"</span> \";\n    // TODO print still not implemented.\n    menuHtml += \"<span id='vpl_ide_edit'>\";\n    menuHtml += menuButtons.getHTML('undo');\n    menuHtml += menuButtons.getHTML('redo');\n    menuHtml += menuButtons.getHTML('select_all');\n    menuHtml += menuButtons.getHTML('find');\n    menuHtml += menuButtons.getHTML('find_replace');\n    menuHtml += menuButtons.getHTML('next');\n    menuHtml += \"</span> \";\n    menuHtml += \"</span> \";\n    menuHtml += menuButtons.getHTML('fullscreen') + ' ';\n    menuHtml += menuButtons.getHTML('about') + ' ';\n    menuHtml += menuButtons.getHTML('user') + ' ';\n    menuHtml += menuButtons.getHTML('timeleft');\n    menuHtml += '<div class=\"clearfix\"></div>';\n    menu.append(menuHtml);\n    $('#vpl_ide_more').button();\n    $('#vpl_ide_save').button();\n    $('#vpl_ide_menuextra').hide();\n    $('#vpl_ide_file').controlgroup();\n    $('#vpl_ide_edit').controlgroup();\n    $('#vpl_ide_mexecution').controlgroup();\n    $('#vpl_ide_fullscreen').button();\n    $('#vpl_ide_acetheme').button();\n    $('#vpl_ide_about').button();\n    $('#vpl_ide_user').button().css('float', 'right').hide();\n    $('#vpl_ide_timeleft').button().css('float', 'right').hide();\n    $('#vpl_menu .ui-button').css('padding', '6px');\n    $('#vpl_menu .ui-button-text').css('padding', '0');\n    var alwaysActive = ['filelist', 'more', 'fullscreen', 'about', 'resetfiles',\n                        'download', 'comments', 'console', 'import',\n                        'fontsize', 'timeleft'];\n    for (var i = 0; i < alwaysActive.length; i++) {\n        menuButtons.enable(alwaysActive[i], true);\n    }\n    menuButtons.setExtracontent('user', options.username);\n    menuButtons.setTimeLeft(options);\n    updateMenu = function() {\n        var i;\n        var file = fileManager.currentFile();\n        var nfiles = fileManager.length();\n        if (nfiles) {\n            tabs.show();\n        } else {\n            tabs.hide();\n        }\n        if (fileManager.isFileListVisible()) {\n            menuButtons.setText('filelist', 'filelistclose', VPLUtil.str('filelist'));\n        } else {\n            menuButtons.setText('filelist', 'filelist', VPLUtil.str('filelist'));\n        }\n        var modified = fileManager.isModified();\n        menuButtons.enable('save', modified);\n        var running = VPLUI.monitorRunning();\n        if (running) {\n            menuButtons.setText('run', 'running');\n        } else {\n            menuButtons.setText('run', 'run');\n        }\n        menuButtons.enable('run', !running && (!modified || options.example) && isOptionAllowed('run'));\n        menuButtons.enable('debug', !running && (!modified || options.example) && isOptionAllowed('debug'));\n        menuButtons.enable('evaluate', !running && (!modified || options.example) && isOptionAllowed('evaluate'));\n        menuButtons.enable('download', !modified);\n        menuButtons.enable('new', nfiles < maxNumberOfFiles);\n        menuButtons.enable('sort', nfiles - minNumberOfFiles > 1);\n        menuButtons.enable('multidelete', nfiles - minNumberOfFiles > 1);\n        menuButtons.enable('showparentfiles', !modified);\n        menuButtons.enable('theme', true);\n        var sel;\n        if (!file || nfiles === 0) {\n            sel = ['rename', 'delete', 'undo', 'redo', 'select_all', 'find', 'find_replace', 'next'];\n            for (i = 0; i < sel.length; i++) {\n                menuButtons.enable(sel[i], false);\n            }\n            return;\n        }\n        menuButtons.enable('rename', file.getId() >= minNumberOfFiles && nfiles !== 0);\n        menuButtons.enable('delete', file.getId() >= minNumberOfFiles && nfiles !== 0);\n        menuButtons.enable('undo', file.hasUndo());\n        menuButtons.enable('redo', file.hasRedo());\n        menuButtons.enable('select_all', file.hasSelectAll());\n        menuButtons.enable('find', file.hasFind());\n        menuButtons.enable('find_replace', file.hasFindReplace());\n        menuButtons.enable('next', file.hasNext());\n        VPLUtil.delay('updateFileList', fileManager.updateFileList);\n    };\n\n    executionActions = {\n        'open': updateMenu,\n        'close': updateMenu,\n        'getConsole': function() {\n            return lastConsole;\n        },\n        'setResult': self.setResult,\n        'ajaxurl': options.ajaxurl,\n        'run': function(content, coninfo, ws) {\n            var parsed = /^([^:]*):?(.*)/.exec(content);\n            var type = VPLUtil.sanitizeText(parsed[1]);\n            if (type == 'terminal' || type == 'webterminal') {\n                if (lastConsole && lastConsole.isOpen()) {\n                    lastConsole.close();\n                }\n                lastConsole = terminal;\n                terminal.connect(coninfo.executionURL, function() {\n                    ws.close();\n                    focusCurrentFile();\n                });\n                if (type == 'webterminal') {\n                    var URLfavicon = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse;\n                    URLfavicon += \"/favicon.ico\";\n                    var imgFavicon = $('<img>');\n                    imgFavicon.attr('src', URLfavicon);\n                    imgFavicon.attr('style', 'display:none');\n                    $('body').append(imgFavicon);\n                }\n            } else if (type == 'vnc') {\n                if (lastConsole && lastConsole.isOpen()) {\n                    lastConsole.close();\n                }\n                lastConsole = VNCClient;\n                VNCClient.connect(coninfo.secure, coninfo.server, coninfo.portToUse, coninfo.VNCpassword,\n                        coninfo.executionPath, function() {\n                            ws.close();\n                            focusCurrentFile();\n                        });\n            } else if (type == \"browser\") {\n                var URL = (coninfo.secure ? \"https\" : \"http\") + \"://\" + coninfo.server + \":\" + coninfo.portToUse + \"/\";\n                URL += VPLUtil.sanitizeText(parsed[2]) + \"/httpPassthrough\";\n                if (isTeacher) {\n                    URL += \"?private\";\n                }\n                var message = '<a href=\"' + URL + '\" target=\"_blank\">';\n                message += VPLUtil.str('open') + '</a>';\n                var options = {\n                    width: 200,\n                    icon: 'run',\n                    title: VPLUtil.str('run'),\n                };\n                showMessage(message, options);\n            } else {\n                VPLUtil.log(\"Type of run error \" + content, true);\n            }\n        },\n        'lastAction': false,\n        'getLastAction': function() {\n            var ret = this.lastAction;\n            this.lastAction = false;\n            return ret;\n        },\n        'setLastAction': function(action) {\n            this.lastAction = action;\n        }\n    };\n\n    tabs.on(\"tabsactivate\", function() {\n        fileManager.currentFile('focus');\n        VPLUtil.delay('updateMenu', updateMenu);\n        VPLUtil.delay('autoResizeTab', autoResizeTab);\n    });\n\n    // VPLIDE resize view control.\n    var jw = $(window);\n    jw.on('resize', autoResizeTab);\n    // Save? before exit.\n    if (!options.example) {\n        jw.on('beforeunload', function() {\n            if (fileManager.isModified()) {\n                return str('changesNotSaved');\n            }\n            return undefined;\n        });\n    }\n    fileManager = new FileManager();\n\n    autoResizeTab();\n    // Checks menu width every 1 sec as it can change without event.\n    (function() {\n        var oldMenuWidth = menu.width();\n        /**\n         * Checks menu width change\n         */\n        function checkMenuWidth() {\n            var newMenuWidth = menu.width();\n            if (oldMenuWidth != newMenuWidth) {\n                oldMenuWidth = newMenuWidth;\n                autoResizeTab();\n            }\n        }\n        checkMenuWidth();\n        setInterval(checkMenuWidth, 1000);\n    }());\n    fileManager.resetModified();\n    VPLUI.requestAction('load', 'loading', options, options.loadajaxurl)\n    .done(function(response) {\n        var allOK = true;\n        var files = response.files;\n        var showFileList = false;\n        for (var i = 0; i < files.length; i++) {\n            var file = files[i];\n            var r = fileManager.addFile(file, false, updateMenu, showErrorMessage);\n            if (r) {\n                r.resetModified();\n                if (i < minNumberOfFiles || files.length <= 5) {\n                    fileManager.open(r);\n                } else {\n                    showFileList = true;\n                }\n            } else {\n                allOK = false;\n            }\n        }\n        tabs.tabs('option', 'active', 0);\n        if (response.compilationexecution) {\n            self.setResult(response.compilationexecution, false);\n        }\n        menuButtons.setTimeLeft(response);\n        if (response.comments > '') {\n            $('#vpl_ide_input_comments').val(response.comments);\n        }\n        if (allOK) {\n            fileManager.resetModified();\n        } else {\n            fileManager.setModified();\n        }\n        if (fileManager.length() === 0 && maxNumberOfFiles > 0) {\n            menuButtons.getAction('new')();\n        } else if (!options.saved) {\n            fileManager.setModified();\n        }\n        fileManager.setFontSize(options.fontSize);\n        fileManager.setVersion(response.version);\n        fileManager.fileListVisible(showFileList);\n        VPLUtil.afterAll('AfterLoadFiles', function() {\n            updateMenu();\n            autoResizeTab();\n            adjustTabsTitles(true);\n            if (fileManager.length() > 0) {\n                var file = fileManager.getFiles()[0];\n                file.open();\n                file.focus();\n            }\n        });\n    })\n    .fail(showErrorMessage);\n};\n\nexport const init = (rootId, options) => {\n    vplIdeInstance = new VPLIDE(rootId, options);\n};\n"],"names":["vplIdeInstance","VPLIDE","rootId","options","fileManager","adjustTabsTitles","autoResizeTab","showErrorMessage","updateMenu","executionActions","self","this","minNumberOfFiles","minfiles","maxNumberOfFiles","maxfiles","restrictedEdit","restrictededitor","example","readOnly","readOnlyFiles","isTeacher","fullScreen","scrollBarWidth","VPLUI","str","VPLUtil","rootObj","append","coreURL","relativeUrl","Error","activateModification","optionsToCheck","loadajaxurl","ajaxurl","new","rename","delete","comments","acetheme","sort","multidelete","import","isOptionAllowed","op","dragoverHandler","e","originalEvent","dataTransfer","dropEffect","preventDefault","dropHandler","stopImmediatePropagation","droppedFiles","listDroppedFiles","entry","path","Promise","resolve","isFile","file","fullName","name","Object","defineProperty","get","push","isDirectory","createReader","readEntries","entries","dirPromises","i","length","all","then","catch","err","log","dt","promises","items","webkitGetAsEntry","getAsFile","callback","files","readSelectedFiles","addFile","fileListVisibleIfNeeded","restrictedPaste","stopPropagation","console","fontSize","parseInt","on","menu","menuButtons","VPLIDEButtons","tr","fileListContainer","fileList","fileListContent","tabsUl","tabs","resultContainer","result","renameDiretoryAction","doNothing","vplMinWidth","updateEvaluationNumber","res","nevaluations","text","reductionbyevaluation","freeevaluations","setExtracontent","lastResult","getTerminal","terminal","setResultGrade","content","raw","titleclass","find","titleTag","replaceWith","setResultTab","contentclass","contentTag","HTMLcontent","contents","html","applyMathJax","window","MathJax","math","Hub","Queue","startup","promise","typesetPromise","setResult","go","getFiles","fileNames","getFileName","clearAnnotations","hasContent","gradeShow","formated","show","grade","sanitizeText","variables","processResult","compilation","evaluation","execution","VPLDescription","vplVisible","accordion","anot","getAnnotations","j","type","gotoFile","row","hide","delay","heightStyle","header","animate","beforeActivate","event","ui","newHeader","hasClass","width","gotoFileLink","currentTarget","addClass","iconFolder","tabsAir","getTabsAir","outerWidth","resizeTabWidth","maxWidth","diffLeft","position","left","originalPosition","resizable","vplOriginalWidth","diffWidth","size","originalSize","currentFile","resizableOptions","containment","resize","start","off","stop","handles","focusCurrentFile","center","newWidth","tabsUlWidth","last","children","parentScrollLeft","parent","scrollLeft","fileTab","getTabNameId","scroll","finish","index","oldWidth","planb","disable","css","right","rel","wfl","newHeight","outerHeight","offset","top","height","panelHeight","resizeHeight","dialogbaseOptions","$","extend","close","showMessage","message","dialogNew","newFileHandler","keyCode","dialog","val","encoding","newfile","open","getTabPos","getId","focus","dialogButtons","title","buttons","setDialogTitleIcon","dialogRename","renameHandler","renameFile","dialogRenameDirectory","renameDirectoryHandler","renameDirectory","target","hasAttribute","dirname","getAttribute","dialogComments","oldStudentComments","setModified","aboutDialog","OKButtons","shortcutDialog","getShortcuts","next","filter","button","dialogSort","dialogSortButtons","regNoNumber","sorted","newOrder","each","orig","id","replace","list","sortable","placeholder","item","removeClass","disableSelection","maxHeight","dialogMultidelete","dialogMultideleteButtons","prop","toDeleteList","label","data","deleteFile","updateFileList","dialogFontsize","fontsizeSlider","dialogFontFizeButtons","value","slider","setFontSize","setUserPreferences","getFontSize","min","max","change","dialogAceTheme","acethemeSelect","dialogAceThemeButtons","setTheme","aceTheme","modal","getTheme","VPLTerminal","VNCClient","VPLVNCClient","lastConsole","fileSelect","resetFiles","requestAction","done","response","fileName","hasOwnProperty","fail","add","originalAction","fileListVisible","isFileListVisible","bindKey","win","mac","filename","ok","icon","closeFile","trigger","openpopup","url","showparentfilesurl","Math","screen","availWidth","availHeight","print","editorName","setText","scrollTop","username","setTimeout","location","download","noconfirmation","executionRequest","action","acting","isConnected","webSocketMonitor","runAction","XGEOMETRY","getCanvasSize","currentFileName","getCurrentFileName","debugAction","evaluateAction","getFilesToSave","version","getVersion","JSON","stringify","postMaxSize","doSave","requestsconfirmation","$checkbox","donotshowagain","question","yes","resetModified","setVersion","setTimeLeft","monitorRunning","processid","getProcessId","setLastAction","isOpen","toggleTimeLeft","tag","is","getHTML","rightPanelButton","launchAction","menuHtml","controlgroup","alwaysActive","enable","nfiles","modified","isModified","sel","running","hasUndo","hasRedo","hasSelectAll","hasFind","hasFindReplace","hasNext","coninfo","ws","parsed","exec","connect","executionURL","URLfavicon","secure","server","portToUse","imgFavicon","attr","VNCpassword","executionPath","URL","ret","lastAction","jw","openFiles","fileNameIncluded","checkName","toLowerCase","nameMod","indexOf","twoBlockly","oldname","newname","isBlockly","v","generateFileList","fileNameExists","localClipboard","setClipboard","t","getClipboard","fileId","theme","addTab","fid","hlink","removeTab","remove","isReadOnly","pos","setGetkeys","hideIDEStatus","ptab","splice","getFilePosById","isClosed","b","showError","validPath","setContent","getUniqueId","VPLFile","extendToBinary","extendToBlockly","extendToCodeEditor","setFileName","isBinary","fileExtension","getContent","gotoFileName","directoryExists","dirName","startsWith","oldName","newName","oldNameLength","checkDirName","newFileNames","substr","oldNames","arguments","fun","args","Array","prototype","slice","shift","apply","currentPos","getFileTab","l","gotoLine","a","fname","fpos","line","getFile","getDirectoryStructure","structure","isDir","addFilePath","split","curdir","pathdir","p","part","lines","lister","dir","indent","fd","sname","attrs","dirline","iconModified","iconReadOnly","iconRequired","getAction","oldMenuWidth","checkMenuWidth","newMenuWidth","setInterval","allOK","showFileList","r","compilationexecution","saved","afterAll"],"mappings":"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"}