{"version":3,"file":"vplideblocklyfile.min.js","sources":["../src/vplideblocklyfile.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Blockly file management\n *\n * @copyright 2013 Juan Carlos Rodríguez-del-Pino\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author Juan Carlos Rodríguez-del-Pino <jcrodriguez@dis.ulpgc.es>\n */\n\n/* globals Interpreter */\n/* globals Blockly */\n\nimport $ from 'jquery';\nimport {VPLUtil} from 'mod_vpl/vplutil';\n\nexport const blocklyExtension = function() {\n    var self = this;\n    var vplIdeInstance = this.getVPLIDE();\n    this.firstContent = true;\n    this.workspaceInstance = false;\n    var adaptBlockly = function() {\n        if (typeof Blockly.PHP.workspaceToCodeOld == 'undefined') {\n            Blockly.PHP.workspaceToCodeOld = Blockly.PHP.workspaceToCode;\n            Blockly.PHP.workspaceToCode = function(workspace) {\n                return \"<?php\\n\" + Blockly.PHP.workspaceToCodeOld(workspace);\n            };\n        }\n        if (typeof Blockly.Python.workspaceToCodeOld == 'undefined') {\n            Blockly.Python.workspaceToCodeOld = Blockly.Python.workspaceToCode;\n            Blockly.Python.workspaceToCode = function(workspace) {\n                return \"# -*- coding: utf-8 -*-\\n\" + Blockly.Python.workspaceToCodeOld(workspace);\n            };\n        }\n    };\n    var oldAdjustSize = this.adjustSize;\n    this.adjustSize = function() {\n        if (oldAdjustSize.call(this)) {\n            var editTag = $(this.getTId());\n            if (editTag.length === 0) {\n                return false;\n            }\n            var tabs = editTag.parent();\n            var newHeight = tabs.height();\n            newHeight -= editTag.position().top;\n            editTag.height(newHeight);\n            $('#' + this.bdiv).height(newHeight);\n            $('#' + this.bdiv).width(editTag.width());\n            Blockly.svgResize(this.workspaceInstance);\n            return false;\n        }\n        return false;\n    };\n    this.undo = function() {\n        if (this.isOpen()) {\n            this.workspaceInstance.undo(false);\n        }\n    };\n    this.redo = function() {\n        if (this.isOpen()) {\n            this.workspaceInstance.undo(true);\n        }\n    };\n    this.interpreter = false;\n    this.animateRun = false;\n    this.RUNSTATE = 1;\n    this.STEPSTATE = 2;\n    this.STOPSTATE = 3;\n    this.executionState = this.STOPSTATE;\n    this.goNext = false;\n    this.initRun = function(animate) {\n        var ter = vplIdeInstance.getTerminal();\n        if (ter.isConnected()) {\n            ter.closeLocal();\n        }\n        this.animateRun = animate;\n        Blockly.JavaScript.STATEMENT_PREFIX = 'highlightBlock(%1);\\n';\n        Blockly.JavaScript.addReservedWords('highlightBlock');\n        var code = Blockly.JavaScript.workspaceToCode(self.workspaceInstance);\n        var initApi = function(interpreter, scope) {\n            // Add an API function for the alert() block.\n            var wrapperAlert = function(text) {\n                text = typeof text != 'string' ? text.toString() + '\\r\\n' : text + '\\r\\n';\n                return interpreter.createPrimitive(ter.writeLocal(text));\n            };\n            interpreter.setProperty(scope, 'alert',\n                    interpreter.createNativeFunction(wrapperAlert));\n\n            // Add an API function for the prompt() block.\n            var wrapperPrompt = function(text, callback) {\n                text = typeof text != 'string' ? text.toString() : '' + text;\n                ter.writeLocal(text);\n                ter.setDataCallback(function(t) {\n                                        ter.writeLocal('\\n');\n                                        callback(t);\n                                    });\n            };\n            interpreter.setProperty(scope, 'prompt',\n                interpreter.createAsyncFunction(wrapperPrompt));\n\n            var wrapperHighlightBlock = function(id) {\n                if (id == self.getBreakpoint()) {\n                    self.executionState = self.STEPSTATE;\n                    self.updateRunButtons();\n                    vplIdeInstance.getTerminal().setMessage(VPLUtil.str('breakpoint'));\n                }\n                if (self.animateRun || self.executionState == self.STEPSTATE) {\n                    self.workspaceInstance.highlightBlock(id);\n                }\n                self.goNext = false;\n            };\n            interpreter.setProperty(scope, 'highlightBlock',\n                    interpreter.createNativeFunction(wrapperHighlightBlock));\n        };\n        self.interpreter = new Interpreter(code, initApi);\n        ter.connectLocal(self.stop, VPLUtil.doNothing);\n    };\n    this.reservedWords = {\n        'Infinity': true, 'Array': true, 'Boolean': true,\n        'Date': true, 'Error': true, 'EvalError': true,\n        'Function': true, 'JSON': true, 'Math': true,\n        'NaN': true, 'Number': true, 'Object': true, 'RangeError': true,\n        'ReferenceError': true, 'RegExp': true, 'String': true,\n        'SyntaxError': true, 'TypeError': true, 'URIError': true,\n        'alert': true, 'arguments': true, 'constructor': true, 'eval': true,\n        'highlightBlock': true, 'isFinite': true,\n        'isNaN': true, 'parseFloat': true, 'parseInt': true, 'prompt': true,\n        'self': true, 'this': true, 'window': true,\n    };\n    (function() {\n        var breakpoint = null;\n        var lastSelection = null;\n        self.getBreakpoint = function() {\n            return breakpoint;\n        };\n        self.setBreakpoint = function() {\n            breakpoint = lastSelection;\n        };\n        self.removeBreakpoint = function() {\n            breakpoint = null;\n        };\n        self.setLastSelection = function(selection) {\n            lastSelection = selection;\n        };\n        self.isSelectingBreakpoint = function() {\n            return breakpoint === null && lastSelection !== null;\n        };\n    })();\n    this.getVarValue = function(val) {\n        var HTML = '';\n        if (val === null) {\n            HTML = \"<b>null</b>\";\n        } else if (val != undefined) {\n            var type = typeof val;\n            if (type == 'string') {\n                HTML = '\"' + VPLUtil.sanitizeText(val) + '\"';\n            } else if (type == 'boolean') {\n                HTML = \"<b>\" + val + \"</b>\";\n            } else if (type == 'object' && val.class === \"Array\") {\n                HTML = '[';\n                var ar = val.properties;\n                for (var i = 0; i < ar.length; i++) {\n                    HTML += self.getVarValue(ar[i]);\n                    if (i != ar.length - 1) {\n                        HTML += ', ';\n                    }\n                }\n                HTML += ']';\n            } else if (type == 'object') {\n                HTML = \"<b>\" + val.toString() + \"</b>\";\n            } else {\n                HTML += '' + val;\n            }\n        }\n        return HTML;\n    };\n    this.getVariables = function(properties) {\n        var HTML = '';\n        for (var proname in properties) {\n            if (this.reservedWords[proname] === true) {\n                continue;\n            }\n            var pro = properties[proname];\n            if (pro != undefined && !(pro.class === \"Function\")) {\n                var value = VPLUtil.sanitizeText(self.getVarValue(pro));\n                HTML += '<b>' + proname + \"</b>:&nbsp;\" + value + \"<br>\\n\";\n            }\n        }\n        return HTML;\n    };\n    this.getParameters = function(args) {\n        var HTML = '(';\n        for (var i = 0; i < args.length; i++) {\n            HTML += '' + args[i];\n            if (i < args.length - 1) {\n                HTML += ', ';\n            }\n        }\n        return HTML + ')';\n    };\n    this.showStack = function(interpreter) {\n        var sn = 0;\n        var HTML = '<table class=\"generaltable\">';\n        var stack = interpreter.stateStack;\n        var lastFunc = '<tr><td>0</td><td><b>Globals</b></td>';\n        for (var i = 0; i < stack.length; i++) {\n            var level = stack[i];\n            if (lastFunc > '' && (level.node.type == 'CallExpression' || i == stack.length - 1)) {\n                HTML += lastFunc + '<td>' + self.getVariables(level.scope.properties);\n                HTML += '</td></tr>';\n            }\n            if (level.node.type == 'CallExpression') {\n                if (self.reservedWords[level.node.callee.name] !== true\n                && level.node.callee.name != undefined) {\n                    sn++;\n                    lastFunc = '<tr><td>' + sn + '</td>';\n                    lastFunc += '<td>' + level.node.callee.name + self.getParameters(level.arguments_) + '</td>';\n                } else {\n                    lastFunc = '';\n                }\n            }\n        }\n        HTML += '</table>';\n        vplIdeInstance.setResult({variables: HTML});\n    };\n    this.runLoop = function() {\n        if (!self.interpreter) {\n            return;\n        }\n        self.goNext = true;\n        for (var i = 0; i < 30000 && self.goNext; i++) {\n            if (self.executionState == self.STOPSTATE) {\n                break;\n            }\n            if (!self.interpreter || !self.interpreter.step()) {\n                self.executionState = self.STOPSTATE;\n                self.updateRunButtons();\n                break;\n            }\n        }\n        if (self.executionState == self.STOPSTATE) {\n            self.workspaceInstance.highlightBlock(-1);\n            vplIdeInstance.getTerminal().closeLocal();\n            vplIdeInstance.setResult({variables: ''});\n            return;\n        }\n        if (self.executionState == self.RUNSTATE) {\n            if (self.animateRun) {\n                setTimeout(self.runLoop, 1000);\n                self.showStack(self.interpreter);\n            } else {\n                setTimeout(self.runLoop, 0);\n            }\n        } else {\n            self.showStack(self.interpreter);\n        }\n    };\n    this.start = function() {\n        if (self.executionState != self.STOPSTATE) {\n            return;\n        }\n        self.initRun(false);\n        self.executionState = self.RUNSTATE;\n        self.updateRunButtons();\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('start'));\n        self.runLoop();\n    };\n    this.startAnimate = function() {\n        if (self.executionState != self.STOPSTATE) {\n            return;\n        }\n        self.initRun(true);\n        self.executionState = self.RUNSTATE;\n        self.updateRunButtons();\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('startanimate'));\n        self.runLoop();\n    };\n    this.stop = function() {\n        self.executionState = self.STOPSTATE;\n        self.workspaceInstance.highlightBlock(-1);\n        self.updateRunButtons();\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('stop'));\n        vplIdeInstance.getTerminal().closeLocal();\n        self.interpreter = false;\n        vplIdeInstance.setResult({variables: ''});\n    };\n    this.pause = function() {\n        if (self.executionState != self.RUNSTATE) {\n            return;\n        }\n        self.executionState = self.STEPSTATE;\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('pause'));\n        self.updateRunButtons();\n    };\n    this.resume = function() {\n        if (self.executionState != self.STEPSTATE) {\n            return;\n        }\n        self.executionState = self.RUNSTATE;\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('resume'));\n        self.updateRunButtons();\n        self.runLoop();\n    };\n    this.step = function() {\n        if (self.executionState == self.STOPSTATE) {\n            self.initRun(true);\n        }\n        self.executionState = self.STEPSTATE;\n        self.updateRunButtons();\n        vplIdeInstance.getTerminal().setMessage(VPLUtil.str('step'));\n        self.runLoop();\n    };\n    this.hasUndo = function() {\n        return true;\n    };\n    this.hasRedo = function() {\n        return true;\n    };\n    this.oldSetFileName = this.setFileName;\n    this.generatorMap = {\n        py: 'Python',\n        dart: 'Dart',\n        js: 'JavaScript',\n        lua: 'Lua',\n        php: 'PHP'\n    };\n    this.generator = '';\n    this.setFileName = function(newName) {\n        var oldFileName = this.getFileName();\n        var oldExt = VPLUtil.fileExtension(oldFileName);\n        if (!self.oldSetFileName(newName)) {\n            VPLUtil.log(\"Blockly setFileName: name no acepted \" + newName);\n            return false;\n        }\n        VPLUtil.log('Blockly set filename ' + newName);\n        var regExt2 = /\\.([^.]+)\\.blockly[123]?$/;\n        var regFn2 = /(.+)\\.blockly[123]?$/;\n        var ext2 = regExt2.exec(newName);\n        var fn2 = regFn2.exec(newName);\n        if (ext2 !== null && fn2 !== null && typeof this.generatorMap[ext2[1]] == 'string') {\n            this.generator = this.generatorMap[ext2[1]];\n            this.generatedFilename = fn2[1];\n            VPLUtil.log('Blockly generator ' + this.generator + ' for filename ' + this.generatedFilename);\n            this.updateGeneratedCode();\n        } else {\n            this.generator = '';\n        }\n        if (oldExt != VPLUtil.fileExtension(newName)) {\n            VPLUtil.log('Blockly extension changed');\n            VPLUtil.afterAll('reopenBlockly', function() {\n                    VPLUtil.log('reopenBlockly');\n                    self.close();\n                    self.open();\n                }\n            );\n        }\n        return true;\n    };\n    this.updateGeneratedCode = function() {\n        if (self.blocklyNotLoaded) {\n            return;\n        }\n        var fileManager = self.getFileManager();\n        if (self.generator != '') {\n            VPLUtil.log('Blockly generate ' + self.generator);\n            var fid = fileManager.fileNameExists(self.generatedFilename);\n            // Try to create generated code file.\n            if (fid == -1) {\n                VPLUtil.log(\"try to create \" + self.generatedFilename + \" files\");\n                fileManager.addFile({\n                    name: self.generatedFilename,\n                    contents: ''},\n                    false, VPLUtil.doNothing, VPLUtil.doNothing);\n                fid = fileManager.fileNameExists(self.generatedFilename);\n            }\n            if (fid != -1) {\n                var code = Blockly[self.generator].workspaceToCode(self.workspaceInstance);\n                var fileGenerated = fileManager.getFile(fid);\n                if (fileGenerated.getContent() != code) {\n                    fileGenerated.setContent(code);\n                    fileGenerated.change();\n                    fileGenerated.gotoLine(1);\n                    fileGenerated.setReadOnly(true);\n                }\n            }\n        }\n    };\n    this.changeCode = function(event) {\n        VPLUtil.log(event);\n        if (event.type == 'ui' && event.element == 'selected') {\n            self.setLastSelection(event.newValue);\n            return;\n        }\n        if (event.type == 'ui'\n                && event.element == 'category'\n                && event.newValue == VPLUtil.str('run')) {\n                VPLUtil.longDelay('updateRunButtons', self.updateRunButtons);\n            return;\n        }\n        if (self.firstContent) {\n            if (event.type == 'finished_loading') {\n                self.firstContent = false;\n                self.workspaceInstance.clearUndo();\n            } else {\n                return;\n            }\n        }\n        if (!event.recordUndo) {\n            return;\n        }\n\n        VPLUtil.log('Call change due changeCode');\n        self.change();\n        if (self.generator != '') {\n            VPLUtil.afterAll('generate' + self.getFileName(), self.updateGeneratedCode);\n        }\n    };\n    var triesUpdateRunButtons = 0;\n    var triesUpdateRunButtonsLimits = 20;\n    this.updateRunButtons = function() {\n        if ($('.blocklySelectBreakpointC').length == 0) {\n            triesUpdateRunButtons++;\n            if (triesUpdateRunButtons > triesUpdateRunButtonsLimits) {\n                triesUpdateRunButtons = 0;\n                VPLUtil.log('Giving up to tries of updateRunButtons');\n                return;\n            }\n            VPLUtil.longDelay('updateRunButtons', self.updateRunButtons);\n            return;\n        }\n        VPLUtil.log('updateRunButtons');\n        triesUpdateRunButtons = 0;\n        var dimmed = 'vpl_dimmed';\n        if (self.isSelectingBreakpoint()) {\n            $('.blocklySelectBreakpointC').removeClass(dimmed);\n        } else {\n            $('.blocklySelectBreakpointC').addClass(dimmed);\n        }\n        if (self.getBreakpoint() === null) {\n            $('.blocklyRemoveBreakpointC').addClass(dimmed);\n        } else {\n            $('.blocklyRemoveBreakpointC').removeClass(dimmed);\n        }\n        switch (self.executionState) {\n            case self.RUNSTATE: {\n                $('.blocklyStartC').addClass(dimmed);\n                $('.blocklyStartAnimateC').addClass(dimmed);\n                $('.blocklyStopC').removeClass(dimmed);\n                $('.blocklyPauseC').removeClass(dimmed);\n                $('.blocklyResumeC').addClass(dimmed);\n                $('.blocklyStepC').addClass(dimmed);\n                break;\n            }\n            case self.STEPSTATE: {\n                $('.blocklyStartC').addClass(dimmed);\n                $('.blocklyStartAnimateC').addClass(dimmed);\n                $('.blocklyStopC').removeClass(dimmed);\n                $('.blocklyPauseC').addClass(dimmed);\n                $('.blocklyResumeC').removeClass(dimmed);\n                $('.blocklyStepC').removeClass(dimmed);\n                break;\n            }\n            case self.STOPSTATE: {\n                $('.blocklyStartC').removeClass(dimmed);\n                $('.blocklyStartAnimateC').removeClass(dimmed);\n                $('.blocklyStopC').addClass(dimmed);\n                $('.blocklyPauseC').addClass(dimmed);\n                $('.blocklyResumeC').addClass(dimmed);\n                $('.blocklyStepC').removeClass(dimmed);\n                break;\n            }\n        }\n    };\n    this.setToolbox = function() {\n        var ext = VPLUtil.fileExtension(this.getFileName());\n        var toolboxname = ext + 'Toolbox';\n        if (self[toolboxname] === false) {\n            $.ajax({\n                url: '../editor/blocklytoolboxes/' + toolboxname + '.xml',\n                dataType: 'text',\n                success: function(data) {\n                    self[toolboxname] = self.blocklyIn18(data);\n                    self.setToolbox();\n                },\n            });\n            return;\n        }\n        var addUpdateButtons = function(func) {\n            return function() {\n                func();\n                self.updateRunButtons();\n            };\n        };\n        var callBacks = {\n            'blocklyStartButton': this.start,\n            'blocklyStartAnimateButton': this.startAnimate,\n            'blocklyStopButton': this.stop,\n            'blocklyPauseButton': this.pause,\n            'blocklyResumeButton': this.resume,\n            'blocklyStepButton': this.step,\n            'blocklySelectBreakpointButton': this.setBreakpoint,\n            'blocklyRemoveBreakpointButton': this.removeBreakpoint,\n        };\n        var wp = this.workspaceInstance;\n        wp.updateToolbox(this[toolboxname]);\n        for (var key in callBacks) {\n            wp.registerButtonCallback(key, addUpdateButtons(callBacks[key]));\n        }\n        this.adjustSize();\n    };\n    this.open = function() {\n        this.showFileName();\n        if (self.blocklyNotLoaded) {\n            VPLUtil.loadScript(\n                [\n                    '/blockly/blockly_compressed.js',\n                    '/blockly/msg/js/en.js',\n                    '/blockly/blocks_compressed.js',\n                    '/blockly/python_compressed.js',\n                    '/blockly/javascript_compressed.js',\n                    '/blockly/php_compressed.js',\n                    '/blockly/lua_compressed.js',\n                    '/blockly/dart_compressed.js',\n                    '/acorn/acorn.js',\n                    '/acorn/interpreter.js',\n                ],\n                function() {\n                    VPLUtil.log('Blocklyloaded', true);\n                    adaptBlockly();\n                    self.blocklyNotLoaded = false;\n                    self.open();\n                }\n            );\n            return false;\n        }\n        var code = this.getContent();\n        this.setOpen(true);\n        var fileName = this.getFileName();\n        var horizontalMenu = false;\n        if (/.*[0-9]$/.test(VPLUtil.fileExtension(fileName))) {\n            horizontalMenu = true;\n        }\n        var tid = this.getTId();\n        // Workaround to remove jquery-ui theme background color.\n        $(tid).removeClass('ui-widget-content ui-tabs-panel');\n        $(tid).addClass('ui-corner-bottom');\n        this.bdiv = 'bkdiv' + this.getId();\n        $(tid).html('<div id=\"' + this.bdiv + '\" style=\"height: 480px; width: 600px;\"></div>');\n        var options = {\n            toolbox: '<xml><category name=\"\" colour=\"330\"><block type=\"math_number\"></block></category></xml>',\n            media: '../editor/blockly/media/',\n            horizontalLayout: horizontalMenu,\n            zoom: {\n                controls: true,\n                wheel: true,\n                startScale: 1.0,\n                maxScale: 3,\n                minScale: 0.2,\n                scaleSpeed: 1.05\n            }\n        };\n        this.workspaceInstance = Blockly.inject(this.bdiv, options);\n        this.setToolbox();\n        this.firstContent = code > '';\n        self.workspaceInstance.addChangeListener(self.changeCode);\n        this.setContent(code);\n        VPLUtil.adjustBlockly(self.workspaceInstance, 10, 10);\n        self.workspaceInstance.scrollX = 0;\n        self.workspaceInstance.scrollY = 0;\n        Blockly.svgResize(self.workspaceInstance);\n        Blockly.resizeSvgContents(self.workspaceInstance);\n        self.setFileName(self.getFileName());\n        self.adjustSize();\n        // Must return false. Do not change it.\n        return false;\n    };\n    var getContentOld = this.getContent;\n    this.getContent = function() {\n        if (!this.isOpen()) {\n            return getContentOld.call(this);\n        }\n        var xml = Blockly.Xml.workspaceToDom(this.workspaceInstance);\n        var xmlText = Blockly.Xml.domToPrettyText(xml);\n        return xmlText;\n    };\n    var setContentOld = this.setContent;\n    this.setContent = function(c) {\n        setContentOld.call(this, c);\n        if (c.length > 0 && this.isOpen()) {\n            this.workspaceInstance.clear();\n            var xml = Blockly.Xml.textToDom(c);\n            Blockly.Xml.domToWorkspace(xml, this.workspaceInstance);\n        }\n    };\n    this.close = function() {\n        if (this.isOpen()) {\n            setContentOld.call(this, this.getContent());\n            this.workspaceInstance.dispose();\n            this.workspaceInstance = false;\n            this.setOpen(false);\n        }\n    };\n    this.blocklyNotLoaded = true;\n    this.blocklyToolbox = false;\n    this.blockly0Toolbox = false;\n    this.blockly1Toolbox = false;\n    this.blockly2Toolbox = false;\n    this.blockly3Toolbox = false;\n    this.blocklyStrs = [\n        'basic',\n        'intermediate',\n        'advanced',\n        'variables',\n        'operatorsvalues',\n        'control',\n        'inputoutput',\n        'functions',\n        'lists',\n        'math',\n        'text',\n        'run',\n        'start',\n        'startanimate',\n        'stop',\n        'pause',\n        'resume',\n        'step',\n        'breakpoint',\n        'selectbreakpoint',\n        'removebreakpoint'\n    ];\n    this.blocklyIn18 = function(data) {\n        var l = this.blocklyStrs.length;\n        for (var i = 0; i < l; i++) {\n            var str = this.blocklyStrs[i];\n            var reg = new RegExp('\\\\[\\\\[' + str + '\\\\]\\\\]', 'g');\n            var rep = VPLUtil.str(str);\n            data = data.replace(reg, rep);\n        }\n        return data;\n    };\n    this.langSelection = function() {\n        this.setLang('Blockly');\n    };\n};\n"],"names":["self","this","vplIdeInstance","getVPLIDE","firstContent","workspaceInstance","breakpoint","lastSelection","oldAdjustSize","adjustSize","call","editTag","getTId","length","newHeight","parent","height","position","top","bdiv","width","Blockly","svgResize","undo","isOpen","redo","interpreter","animateRun","RUNSTATE","STEPSTATE","STOPSTATE","executionState","goNext","initRun","animate","ter","getTerminal","isConnected","closeLocal","JavaScript","STATEMENT_PREFIX","addReservedWords","code","workspaceToCode","Interpreter","scope","setProperty","createNativeFunction","text","toString","createPrimitive","writeLocal","createAsyncFunction","callback","setDataCallback","t","id","getBreakpoint","updateRunButtons","setMessage","VPLUtil","str","highlightBlock","connectLocal","stop","doNothing","reservedWords","setBreakpoint","removeBreakpoint","setLastSelection","selection","isSelectingBreakpoint","getVarValue","val","HTML","undefined","type","sanitizeText","class","ar","properties","i","getVariables","proname","pro","getParameters","args","showStack","sn","stack","stateStack","lastFunc","level","node","callee","name","arguments_","setResult","variables","runLoop","step","setTimeout","start","startAnimate","pause","resume","hasUndo","hasRedo","oldSetFileName","setFileName","generatorMap","py","dart","js","lua","php","generator","newName","oldFileName","getFileName","oldExt","fileExtension","log","ext2","exec","fn2","generatedFilename","updateGeneratedCode","afterAll","close","open","blocklyNotLoaded","fileManager","getFileManager","fid","fileNameExists","addFile","contents","fileGenerated","getFile","getContent","setContent","change","gotoLine","setReadOnly","changeCode","event","element","newValue","clearUndo","recordUndo","longDelay","triesUpdateRunButtons","dimmed","removeClass","addClass","setToolbox","toolboxname","addUpdateButtons","func","callBacks","wp","key","updateToolbox","registerButtonCallback","ajax","url","dataType","success","data","blocklyIn18","showFileName","loadScript","PHP","workspaceToCodeOld","workspace","Python","setOpen","fileName","horizontalMenu","test","tid","getId","html","options","toolbox","media","horizontalLayout","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","inject","addChangeListener","adjustBlockly","scrollX","scrollY","resizeSvgContents","getContentOld","xml","Xml","workspaceToDom","domToPrettyText","setContentOld","c","clear","textToDom","domToWorkspace","dispose","blocklyToolbox","blockly0Toolbox","blockly1Toolbox","blockly2Toolbox","blockly3Toolbox","blocklyStrs","l","reg","RegExp","rep","replace","langSelection","setLang"],"mappings":"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"}