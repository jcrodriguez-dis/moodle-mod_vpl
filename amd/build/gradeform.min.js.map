{"version":3,"file":"gradeform.min.js","sources":["../src/gradeform.js"],"sourcesContent":["// This file is part of VPL for Moodle - http://vpl.dis.ulpgc.es/\n//\n// VPL for Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// VPL for Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with VPL for Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript functions to help grade form\n * @copyright 2012 Juan Carlos Rodr√≠guez-del-Pino, 2021 Astor Bizard\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\n/**\n * Apply grade reduction comments to given grade.\n * @param {Number} grade Original grade.\n * @param {String} comments Comments with some grade reduction.\n * @returns {Number} The reduced grade.\n */\nfunction reduceGradeWithComments(grade, comments) {\n    var regDiscount = /^-.+\\((-[0-9.]+)\\)\\s*$/gm;\n    var match;\n    while ((match = regDiscount.exec(comments)) !== null) {\n        var rest = parseFloat(match[1]);\n        if (rest < 0) {\n            grade += rest;\n        }\n    }\n    return grade;\n}\n\n/**\n * Format grade (in points) to a displayable float.\n * @param {Number} grade Grade to be formatted.\n * @returns {Number} The formatted grade.\n */\nfunction formatGrade(grade) {\n    // No negative grade.\n    if (grade < 0) {\n        return 0;\n    }\n    // Max two decimal points.\n    return Math.round(100 * grade) / 100;\n}\n\n/**\n * Init method for grade buttons (Merge grade, Calculate).\n */\nfunction setupGradeButtons() {\n    // Calculate button.\n    $('button[data-role=\"calculategrade\"]').click(function() {\n        // Recalculate numeric grade from the max grade,\n        // substracting points found at the end of lines.\n        // Valid reduction format: \"- text (-grade)\".\n        var $form = $(this).closest('form');\n        var text = $form.find('[name=\"comments\"]').val();\n        var grade = parseFloat($(this).data('maxgrade'));\n        grade = formatGrade(reduceGradeWithComments(grade, text));\n        $form.find('[name=\"grade\"]').val(grade);\n    });\n\n    // Merge grade button.\n    $('button[data-role=\"mergegrade\"]').click(function() {\n        // Merge numeric grade from the proposed grade and advancedgrading grid,\n        // substracting points found at the end of lines.\n        // Valid reduction format: \"- text (-grade)\".\n        var $form = $(this).closest('form');\n        var gridpoints = 0;\n        if ($form.find('.score .scorevalue').length > 0) {\n            $form.find('.checked .score .scorevalue')\n            .each(function() {\n                gridpoints += Number($(this).text());\n            });\n        } else {\n            $form.find('.score input')\n            .each(function() {\n                gridpoints += Number($(this).val());\n            });\n        }\n        var advancedgradingcomments = '';\n        $form.find('.criterion .remark textarea')\n        .each(function() {\n            advancedgradingcomments += $(this).val() + \"\\n\";\n        });\n        gridpoints = reduceGradeWithComments(gridpoints, advancedgradingcomments);\n\n        var maxgrade = $(this).data('maxgrade');\n        var currentgrade = $(this).data('currentgrade');\n        var maxgridpoints = $(this).data('maxgridpoints');\n\n        var grade = formatGrade(currentgrade - maxgridpoints * (currentgrade / maxgrade) + gridpoints);\n        $form.find('[name=\"grade\"]').val(grade);\n\n        var $comments = $form.find('[name=\"comments\"]');\n        var text = $comments.val();\n\n        var gridtag = '#Grid grade';\n        var gridcomment = gridtag + ': ' + grade;\n        if (text.search(gridtag) < 0) {\n            text = gridcomment + \"\\n\" + text;\n        } else {\n            text = text.replace(new RegExp(gridtag + '.*'), gridcomment);\n        }\n        var proposedtag = '#Proposed grade';\n        var proposedcomment = proposedtag + ': ' + currentgrade;\n        if (text.search(proposedtag) < 0) {\n            text = proposedcomment + \"\\n\" + text;\n        } else {\n            text = text.replace(new RegExp(proposedtag + '.*'), proposedcomment);\n        }\n\n        $comments.val(text);\n    });\n}\n\n/**\n * Init method for import buttons.\n */\nfunction setupImportButtons() {\n    $('button[data-role=\"importfromsub\"]').click(function() {\n        var $form = $(this).closest('form');\n        // Set grade and comments.\n        $form.find('[name=\"grade\"]').val($(this).data('grade'));\n        $form.find('[name=\"comments\"]').val($(this).data('comments'));\n\n        // Set advanced grading data:\n\n        // First, reset the fields.\n        $('#advancedgrading-criteria .criterion .remark textarea').val('');\n        $('#advancedgrading-criteria .criterion .score input').val('');\n        // Handle rubric level selection slightly differently:\n        // we trigger a click on it, so it updates its UI correctly.\n        $('#advancedgrading-criteria .criterion .level.checked').click();\n\n        // Then, set the fields to their new values.\n        $(this).data('advgrading').forEach(function(criterion) {\n            var id = criterion.criterionid;\n            if (typeof (criterion.remark) !== 'undefined') {\n                $form.find('[name=\"advancedgrading[criteria][' + id + '][remark]\"]').val(criterion.remark);\n            }\n            if (typeof (criterion.score) !== 'undefined') {\n                $form.find('[name=\"advancedgrading[criteria][' + id + '][score]\"]').val(parseFloat(criterion.score));\n            }\n            // Handle rubric level selection slightly differently:\n            // we trigger a click on it, so it updates its UI correctly.\n            if (typeof (criterion.levelid) !== 'undefined') {\n                $('#advancedgrading-criteria-' + id + '-levels-' + criterion.levelid).click();\n            }\n        });\n    });\n}\n\n/**\n * Setup the grade form JS features.\n */\nexport const setup = () => {\n    setupGradeButtons();\n    setupImportButtons();\n};\n\n/**\n * Update the submission list in the opener window with the new grade data.\n * If nexturl is given, go to the next submission after updating.\n * @param {Number} submissionID The submission being graded.\n * @param {Object} gradeData The new grade data.\n * @param {String} nexturl URL of the next submission to be graded (if any).\n */\nexport const updateSubmissionsList = (submissionID, gradeData, nexturl) => {\n    if (opener !== null) {\n        $(opener.document).find('#g' + submissionID).html(gradeData.grade);\n        $(opener.document).find('#m' + submissionID).html(gradeData.grader);\n        $(opener.document).find('#o' + submissionID).html(gradeData.gradedon);\n        $(opener.document).find('#c' + submissionID).html(gradeData.comments);\n        $(opener.document).find('.gd' + submissionID).css('color', '').css('backgroundColor', '');\n    }\n    if (nexturl) {\n        if (opener === null) {\n            window.close();\n        }\n        var nextrow = $(opener.document).find('#g' + submissionID).closest('tr').next();\n        if (nextrow.length == 0) {\n            window.close();\n        }\n        var nextid = nextrow.html().match(/user\\/view\\.php\\?(.*?)id=([0-9]+)/)[2];\n        if (nextid) {\n            location.replace(nexturl + nextid);\n        } else {\n            window.close();\n        }\n    }\n};\n\n/**\n * Highlight the submission being graded in the opener window.\n * @param {Number} submissionID The submission being graded.\n */\nexport const highlightSubmission = (submissionID) => {\n    if (opener !== null) {\n        $(opener.document).find('.gd' + submissionID).css('color', 'black').css('backgroundColor', 'yellow');\n        window.onunload = function() {\n            $(opener.document).find('.gd' + submissionID).css('color', '').css('backgroundColor', '');\n        };\n    }\n};\n"],"names":["reduceGradeWithComments","grade","comments","match","regDiscount","exec","rest","parseFloat","formatGrade","Math","round","click","$form","this","closest","text","find","val","data","gridpoints","length","each","Number","advancedgradingcomments","maxgrade","currentgrade","$comments","gridcomment","gridtag","proposedcomment","proposedtag","search","replace","RegExp","forEach","criterion","id","criterionid","remark","score","levelid","submissionID","gradeData","nexturl","opener","document","html","grader","gradedon","css","window","close","nextrow","next","nextid","location","onunload"],"mappings":"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"}